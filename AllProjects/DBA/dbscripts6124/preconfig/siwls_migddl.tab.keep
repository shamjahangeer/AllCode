--
-- DB Migration Tables
--

PROMPT Create tables

CREATE OR REPLACE PROCEDURE db_migration_create_table 
  (in_table_name VARCHAR2,
   in_sql VARCHAR2) IS   
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tables
  WHERE  table_name = in_table_name;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE in_sql;   
END;
/   

PROMPT Creating Table 'EAMS_INGEST_PKG_APP_DATA'
BEGIN
  db_migration_create_table ('EAMS_INGEST_PKG_APP_DATA',
                             'CREATE TABLE EAMS_INGEST_PKG_APP_DATA '||CHR(10)||
                             '( '||CHR(10)||
                             '  ITEM_CATEGORY_ID       NUMBER(10)             NOT NULL, '||CHR(10)||
                             '  ITEM_CATEGORY_VERSION  VARCHAR2(10 BYTE)      NOT NULL, '||CHR(10)||
                             '  CATCHER_ID             NUMBER(10)             NOT NULL, '||CHR(10)||
                             '  APP_DATA_NAME          VARCHAR2(2048 BYTE), '||CHR(10)||
                             '  APP_DATA_VALUE         VARCHAR2(4000 BYTE), '||CHR(10)||
                             '  STATUS                 VARCHAR2(30 BYTE) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128M_DAT');
END;
/

PROMPT Creating Table 'EAMS_PUBLISH_PKG_APP_DATA'
BEGIN
  db_migration_create_table ('EAMS_PUBLISH_PKG_APP_DATA',
                             'CREATE TABLE EAMS_PUBLISH_PKG_APP_DATA '||CHR(10)||
                             '( '||CHR(10)||
                             '  PUBLISH_ID       NUMBER(10) NOT NULL, '||CHR(10)||
                             '  APP_DATA_NAME    VARCHAR2(2048 BYTE), '||CHR(10)||
                             '  APP_DATA_VALUE   VARCHAR2(4000 BYTE), '||CHR(10)||
                             '  STATUS           VARCHAR2(30 BYTE), '||CHR(10)||
                             '  ITEM_CATEGORY_ID       NUMBER(10), '||CHR(10)||
                             '  ITEM_CATEGORY_VERSION  VARCHAR2(10 BYTE), '||CHR(10)||
                             '  NE_ID            NUMBER(11), '||CHR(10)||
                             '  PROFILE_ID       NUMBER '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128M_DAT');
END;
/

PROMPT Creating Table 'CCE_REPORT_GROUP'
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'CCE_REPORT_GROUP';
  l_dummy INTEGER;  
  l_sql VARCHAR2(1024) := 'CREATE TABLE CCE_REPORT_GROUP '||CHR(10)||
                          '(  '||CHR(10)||
                          '  RPT_GRP_ID NUMBER(3, 0) NOT NULL,  '||CHR(10)||
                          '  RPT_GRP_NAME VARCHAR2(20) NOT NULL,  '||CHR(10)||
                          '  RPT_GRP_DISP_NAME VARCHAR2(200) NOT NULL,  '||CHR(10)||
                          '  RPT_GRP_DESC VARCHAR2(500)  '||CHR(10)||
                          ')  '||CHR(10)||
                          'TABLESPACE LEAPSTONE_128K_DAT ';
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tables
  WHERE  table_name = l_table_name;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE l_sql;
END;
/

PROMPT Creating Table 'CCE_REPORT_DEF'
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'CCE_REPORT_DEF';
  l_dummy INTEGER;  
  l_sql VARCHAR2(1024) := 'CREATE TABLE CCE_REPORT_DEF  '||CHR(10)||
                          '(  '||CHR(10)||
                          '  REPORT_ID NUMBER(4) NOT NULL,  '||CHR(10)||
                          '  REPORT_NAME VARCHAR2(20) NOT NULL,  '||CHR(10)||
                          '  REPORT_DISP_NAME VARCHAR2(200) NOT NULL,  '||CHR(10)||
                          '  REPORT_DESC VARCHAR2(500)  '||CHR(10)||
                          ')  '||CHR(10)||
                          'TABLESPACE LEAPSTONE_128K_DAT  ';
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tables
  WHERE  table_name = l_table_name;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE l_sql;
END;
/

PROMPT Creating Table 'CCE_RPT_GRP_ASSOC'
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'CCE_RPT_GRP_ASSOC';
  l_dummy INTEGER;  
  l_sql VARCHAR2(1024) := 'CREATE TABLE CCE_RPT_GRP_ASSOC  '||CHR(10)||
                          '(  '||CHR(10)||
                          '  REPORT_GRP_ID NUMBER(4) NOT NULL,  '||CHR(10)||
                          '  REPORT_ID NUMBER(4) NOT NULL  '||CHR(10)||
                          '  '||CHR(10)||
                          ')  '||CHR(10)||
                          'TABLESPACE LEAPSTONE_128K_DAT ';
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tables
  WHERE  table_name = l_table_name;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE l_sql;
END;
/

PROMPT Creating Table 'CCE_RPT_FILTERS'
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'CCE_RPT_FILTERS';
  l_dummy INTEGER;  
  l_sql VARCHAR2(1024) := 'CREATE TABLE CCE_RPT_FILTERS  '||CHR(10)||
                          '(  '||CHR(10)||
                          '  REPORT_ID NUMBER(4),  '||CHR(10)||
                          '  RPT_FIELD_NAME VARCHAR2(50) NOT NULL,  '||CHR(10)||
                          '  RPT_FIELD_DISP_NAME VARCHAR2(100) NOT NULL,  '||CHR(10)||
                          '  RPT_FIELD_DISP_NAME2 VARCHAR2(100),  '||CHR(10)||
                          '  RPT_FIELD_TYPE VARCHAR2(20) NOT NULL,  '||CHR(10)||
                          '  RPT_FIELD_DESC VARCHAR2(200) NOT NULL,  '||CHR(10)||
                          '  FIELD_RESOLVER_IMPL VARCHAR2(150), '||CHR(10)||
                          '  RPT_FIELD_SEQ NUMBER DEFAULT 1 NOT NULL '||CHR(10)||
                          ')  '||CHR(10)||
                          'TABLESPACE LEAPSTONE_128K_DAT  ';                                                    
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tables
  WHERE  table_name = l_table_name;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE l_sql;
END;
/

PROMPT Creating Table 'CCE_RPT_EXPORT_OPTIONS'
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'CCE_RPT_EXPORT_OPTIONS';
  l_dummy INTEGER;  
  l_sql VARCHAR2(1024) := 'CREATE TABLE CCE_RPT_EXPORT_OPTIONS  '||CHR(10)||
                          '(  '||CHR(10)||
                          '  EXPORT_OPT_ID NUMBER(4) NOT NULL,  '||CHR(10)||
                          '  EXPORT_OPT_NAME VARCHAR2(20) NOT NULL,  '||CHR(10)||
                          '  EXPORT_OPT_DISP_NAME VARCHAR2(20) NOT NULL,  '||CHR(10)||
                          '  EXPORT_OPT_DESC VARCHAR2(100)  '||CHR(10)||
                          ')  '||CHR(10)||
                          'TABLESPACE LEAPSTONE_128K_DAT ';                                                   
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tables
  WHERE  table_name = l_table_name;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE l_sql;
END;
/

PROMPT Creating Table 'CCE_RPT_EXPORT_ASSOC'
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'CCE_RPT_EXPORT_ASSOC';
  l_dummy INTEGER;  
  l_sql VARCHAR2(1024) := 'CREATE TABLE CCE_RPT_EXPORT_ASSOC  '||CHR(10)||
                          '(  '||CHR(10)||
                          '  EXPORT_OPT_ID NUMBER(4) NOT NULL,  '||CHR(10)||
                          '  REPORT_ID NUMBER(4) NOT NULL  '||CHR(10)||
                          ')  '||CHR(10)||
                          'TABLESPACE LEAPSTONE_128K_DAT ';
                                                   
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tables
  WHERE  table_name = l_table_name;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE l_sql;
END;
/

PROMPT Creating Table 'EAMS_ENCR_AGENT_TRANS'
BEGIN
  db_migration_create_table ('EAMS_ENCR_AGENT_TRANS',
                             'CREATE TABLE EAMS_ENCR_AGENT_TRANS (  '||CHR(10)||
                             '  TRANSACTIONID          VARCHAR2 (50)  NOT NULL  '||CHR(10)||
                             '  ,CONTENTID              VARCHAR2 (50)  NOT NULL  '||CHR(10)||
                             '  ,STATUSDESCRIPTION      VARCHAR2 (100)  '||CHR(10)||
                             '  ,TRANSACTIONSTARTTIME   NUMBER  '||CHR(10)||
                             '  ,TRANSACTIONENDTIME     NUMBER  '||CHR(10)||
                             '  ,PUBLICKEY              VARCHAR2 (100)  '||CHR(10)||
                             '  ,PRIVATEKEY             VARCHAR2 (100)  '||CHR(10)||
                             '  ,KEYID                  VARCHAR2 (100)  '||CHR(10)||
                             '  ,SEED                   VARCHAR2 (100)  '||CHR(10)||
                             '  ,CONTENTINPUTLOCATION   VARCHAR2 (256)  '||CHR(10)||
                             '  ,CONTENTOUTPUTLOCATION  VARCHAR2 (256) '||CHR(10)||
                             '  ,LICENSEACQUISITIONURL  VARCHAR2 (256) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                            );
END;
/

PROMPT Creating Table EAMS_ENCODE_AGENT_PROFILE_MAP 
BEGIN
  db_migration_create_table ('EAMS_ENCODE_AGENT_PROFILE_MAP',
                             'CREATE TABLE EAMS_ENCODE_AGENT_PROFILE_MAP (  '||CHR(10)||
                             '   EAMS_PROFILE_ID     NUMBER  '||CHR(10)||
                             '  ,ENCODER_SYSTEM_ID   NUMBER        NOT NULL '||CHR(10)||
                             '  ,ENCODER_PROFILE_ID  NUMBER        NOT NULL  '||CHR(10)||
                             '  ,PROFILE_NAME        VARCHAR2 (50) '||CHR(10)||
                             '  ,PROFILE_TYPE        NUMBER '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                            );
END;
/

PROMPT Creating Table EAMS_ENCODE_AGENT_CONFIG
BEGIN
  db_migration_create_table ('EAMS_ENCODE_AGENT_CONFIG',
                             'CREATE TABLE EAMS_ENCODE_AGENT_CONFIG (  '||CHR(10)||
                             '   FIELDNAME   VARCHAR2 (50)  NOT NULL  '||CHR(10)||
                             '  ,FIELDVALUE  VARCHAR2 (100)  NOT NULL  '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                            );
END;
/

PROMPT Creating Table EAMS_ENCR_AGENT_CONFIG 
BEGIN
  db_migration_create_table ('EAMS_ENCR_AGENT_CONFIG',
                             'CREATE TABLE EAMS_ENCR_AGENT_CONFIG (  '||CHR(10)||
                             '  FIELDNAME   VARCHAR2 (50)  NOT NULL  '||CHR(10)||
                             '  ,FIELDVALUE  VARCHAR2 (100)  NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                            );
END;
/

PROMPT Creating Table EAMS_ENCODE_AGENT_AV_PROFILE 
BEGIN
  db_migration_create_table ('EAMS_ENCODE_AGENT_AV_PROFILE',
                             'CREATE TABLE EAMS_ENCODE_AGENT_AV_PROFILE (  '||CHR(10)||
                             '   AV_PROFILE_ID    NUMBER  '||CHR(10)||
                             '  ,NAME             VARCHAR2 (100)  '||CHR(10)||
                             '  ,VALUE            VARCHAR2 (100) '||CHR(10)||
                             '  ,AV_PROFILE_TYPE  VARCHAR2 (1) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                            );
END;
/
 
PROMPT Creating Table EAMS_ENCODE_AGENT_PROF_AV_MAP
BEGIN
  db_migration_create_table ('EAMS_ENCODE_AGENT_PROF_AV_MAP',
                             'CREATE TABLE EAMS_ENCODE_AGENT_PROF_AV_MAP (  '||CHR(10)||
                             '   ENCODER_PROFILE_ID  NUMBER '||CHR(10)||
                             '  ,AV_PROFILE_ID       NUMBER '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                            );
END;
/

PROMPT Creating Table EAMS_ENCODE_AGENT_TRANS  
BEGIN
  db_migration_create_table ('EAMS_ENCODE_AGENT_TRANS',
                             'CREATE TABLE EAMS_ENCODE_AGENT_TRANS (  '||CHR(10)||
                             '  TRANSACTIONID          VARCHAR2 (50) '||CHR(10)||
                             '  ,CONTENTID              VARCHAR2 (50)  '||CHR(10)||
                             '  ,STATUSDESCRIPTION      VARCHAR2 (100)  '||CHR(10)||
                             '  ,TRANSACTIONSTARTTIME   NUMBER '||CHR(10)||
                             '  ,TRANSACTIONENDTIME     NUMBER  '||CHR(10)||
                             '  ,CONTENTINPUTLOCATION   VARCHAR2 (256) '||CHR(10)||
                             '  ,CONTENTOUTPUTLOCATION  VARCHAR2 (256) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                            );
END;
/

PROMPT Creating Table CCE_USER_VENDOR_ASSOC  
BEGIN
  db_migration_create_table ('CCE_USER_VENDOR_ASSOC',
                             'CREATE TABLE CCE_USER_VENDOR_ASSOC  '||CHR(10)||
                             '(USER_VENDOR_ID NUMBER NOT NULL '||CHR(10)||
                             ',USER_ID    NUMBER        NOT NULL '||CHR(10)||
                             ',VENDOR_ID  NUMBER        NOT NULL '||CHR(10)||
                             ',CREATE_TIME NUMBER       NOT NULL '||CHR(10)||
                             ',START_TIME  NUMBER       NOT NULL '||CHR(10)||
                             ',END_TIME    NUMBER '||CHR(10)||
                             ',STATUS      NUMBER '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table QRTZ_JOB_DETAILS  
BEGIN
  db_migration_create_table ('QRTZ_JOB_DETAILS',
                             'CREATE TABLE QRTZ_JOB_DETAILS '||CHR(10)||
                             '(JOB_NAME  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',JOB_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',DESCRIPTION VARCHAR2(250) NULL '||CHR(10)||
                             ',JOB_CLASS_NAME VARCHAR2(250) NOT NULL '||CHR(10)||
                             ',IS_DURABLE VARCHAR2(1) NOT NULL '||CHR(10)||
                             ',IS_VOLATILE VARCHAR2(1) NOT NULL '||CHR(10)||
                             ',IS_STATEFUL VARCHAR2(1) NOT NULL '||CHR(10)||
                             ',REQUESTS_RECOVERY VARCHAR2(1) NOT NULL '||CHR(10)||
                             ',JOB_DATA BLOB NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table QRTZ_JOB_LISTENERS  
BEGIN
  db_migration_create_table ('QRTZ_JOB_LISTENERS',
                             'CREATE TABLE QRTZ_JOB_LISTENERS '||CHR(10)||
                             '(JOB_NAME  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',JOB_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',JOB_LISTENER VARCHAR2(200) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table QRTZ_TRIGGERS  
BEGIN
  db_migration_create_table ('QRTZ_TRIGGERS',
                             'CREATE TABLE QRTZ_TRIGGERS '||CHR(10)||
                             '(TRIGGER_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',JOB_NAME  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',JOB_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',IS_VOLATILE VARCHAR2(1) NOT NULL '||CHR(10)||
                             ',DESCRIPTION VARCHAR2(250) NULL '||CHR(10)||
                             ',NEXT_FIRE_TIME NUMBER(13) NULL '||CHR(10)||
                             ',PREV_FIRE_TIME NUMBER(13) NULL '||CHR(10)||
                             ',PRIORITY NUMBER(13) NULL '||CHR(10)||
                             ',TRIGGER_STATE VARCHAR2(16) NOT NULL '||CHR(10)||
                             ',TRIGGER_TYPE VARCHAR2(8) NOT NULL '||CHR(10)||
                             ',START_TIME NUMBER(13) NOT NULL '||CHR(10)||
                             ',END_TIME NUMBER(13) NULL '||CHR(10)||
                             ',CALENDAR_NAME VARCHAR2(200) NULL '||CHR(10)||
                             ',MISFIRE_INSTR NUMBER(2) NULL '||CHR(10)||
                             ',JOB_DATA BLOB NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table QRTZ_SIMPLE_TRIGGERS  
BEGIN
  db_migration_create_table ('QRTZ_SIMPLE_TRIGGERS',
                             'CREATE TABLE QRTZ_SIMPLE_TRIGGERS '||CHR(10)||
                             '(TRIGGER_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',REPEAT_COUNT NUMBER(7) NOT NULL '||CHR(10)||
                             ',REPEAT_INTERVAL NUMBER(12) NOT NULL '||CHR(10)||
                             ',TIMES_TRIGGERED NUMBER(10) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table QRTZ_CRON_TRIGGERS  
BEGIN
  db_migration_create_table ('QRTZ_CRON_TRIGGERS',
                             'CREATE TABLE QRTZ_CRON_TRIGGERS '||CHR(10)||
                             '(TRIGGER_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',CRON_EXPRESSION VARCHAR2(120) NOT NULL '||CHR(10)||
                             ',TIME_ZONE_ID VARCHAR2(80) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table QRTZ_BLOB_TRIGGERS  
BEGIN
  db_migration_create_table ('QRTZ_BLOB_TRIGGERS',
                             'CREATE TABLE QRTZ_BLOB_TRIGGERS '||CHR(10)||
                             '(TRIGGER_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',BLOB_DATA BLOB NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table QRTZ_TRIGGER_LISTENERS  
BEGIN
  db_migration_create_table ('QRTZ_TRIGGER_LISTENERS',
                             'CREATE TABLE QRTZ_TRIGGER_LISTENERS '||CHR(10)||
                             '(TRIGGER_NAME  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_LISTENER VARCHAR2(200) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table QRTZ_CALENDARS  
BEGIN
  db_migration_create_table ('QRTZ_CALENDARS',
                             'CREATE TABLE QRTZ_CALENDARS '||CHR(10)||
                             '(CALENDAR_NAME  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',CALENDAR BLOB NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table QRTZ_PAUSED_TRIGGER_GRPS  
BEGIN
  db_migration_create_table ('QRTZ_PAUSED_TRIGGER_GRPS',
                             'CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS '||CHR(10)||
                             '(TRIGGER_GROUP  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table QRTZ_PAUSED_TRIGGER_GRPS  
BEGIN
  db_migration_create_table ('QRTZ_PAUSED_TRIGGER_GRPS',
                             'CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS '||CHR(10)||
                             '(TRIGGER_GROUP  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table QRTZ_FIRED_TRIGGERS  
BEGIN
  db_migration_create_table ('QRTZ_FIRED_TRIGGERS',
                             'CREATE TABLE QRTZ_FIRED_TRIGGERS  '||CHR(10)||
                             '(ENTRY_ID VARCHAR2(95) NOT NULL '||CHR(10)||
                             ',TRIGGER_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',IS_VOLATILE VARCHAR2(1) NOT NULL '||CHR(10)||
                             ',INSTANCE_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',FIRED_TIME NUMBER(13) NOT NULL '||CHR(10)||
                             ',PRIORITY NUMBER(13) NOT NULL '||CHR(10)||
                             ',STATE VARCHAR2(16) NOT NULL '||CHR(10)||
                             ',JOB_NAME VARCHAR2(200) NULL '||CHR(10)||
                             ',JOB_GROUP VARCHAR2(200) NULL '||CHR(10)||
                             ',IS_STATEFUL VARCHAR2(1) NULL '||CHR(10)||
                             ',REQUESTS_RECOVERY VARCHAR2(1) NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table QRTZ_SCHEDULER_STATE  
BEGIN
  db_migration_create_table ('QRTZ_SCHEDULER_STATE',
                             'CREATE TABLE QRTZ_SCHEDULER_STATE  '||CHR(10)||
                             '(INSTANCE_NAME VARCHAR2(200) NOT NULL, '||CHR(10)||
                             'LAST_CHECKIN_TIME NUMBER(13) NOT NULL, '||CHR(10)||
                             'CHECKIN_INTERVAL NUMBER(13) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table QRTZ_LOCKS  
BEGIN
  db_migration_create_table ('QRTZ_LOCKS',
                             'CREATE TABLE QRTZ_LOCKS '||CHR(10)||
                             '(LOCK_NAME  VARCHAR2(40) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_MEDIA_FORMAT_INFO  
BEGIN
  db_migration_create_table ('EAMS_MEDIA_FORMAT_INFO',
                             'CREATE TABLE EAMS_MEDIA_FORMAT_INFO '||CHR(10)||
                             '(MEDIA_FORMAT_ID NUMBER NOT NULL '||CHR(10)||
                             ',FIELD_ID NUMBER (10) NOT NULL '||CHR(10)||
                             ',FIELD_VALUE VARCHAR2 (4000) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_ASPERA_SUB_INFO  
BEGIN
  db_migration_create_table ('EAMS_ASPERA_SUB_INFO',
                             'CREATE TABLE EAMS_ASPERA_SUB_INFO '||CHR(10)||
                             '(SUBSCRIPTION_ID VARCHAR2 (100) NOT NULL '||CHR(10)||
                             ',SUBSCRIPTION_TYPE VARCHAR2 (100) NOT NULL '||CHR(10)||
                             ',NE_ID NUMBER '||CHR(10)||
                             ',PUBLISH_TYPE VARCHAR2 (100) NOT NULL '||CHR(10)||
                             ',CENTRAL_ADDRESS VARCHAR2 (100) NOT NULL '||CHR(10)||
                             ',OBSERVER_URL VARCHAR2 (256) NOT NULL '||CHR(10)||
                             ',SUBSCRIPTION_TIME_REMAINING NUMBER '||CHR(10)||
                             ',SUBSCRIPTION_REQUIRED VARCHAR2 (1) NOT NULL '||CHR(10)||
                             ',SUBSCRIPTION_START_TIME NUMBER NOT NULL '||CHR(10)||
                             ',NODE_ID VARCHAR2 (10) '||CHR(10)||
                             ',SUBSCRIPTION_STATUS VARCHAR2 (15) NOT NULL '||CHR(10)||
                             ',CREATE_TIME NUMBER NOT NULL '||CHR(10)||
                             ',CREATE_BY VARCHAR2 (20) NOT NULL '||CHR(10)||
                             ',MODIFY_TIME NUMBER '||CHR(10)||
                             ',MODIFIED_BY VARCHAR2 (20) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_RM_NE_LOAD_INFO  
BEGIN
  db_migration_create_table ('EAMS_RM_NE_LOAD_INFO',
                             'CREATE TABLE EAMS_RM_NE_LOAD_INFO '||CHR(10)||
                             '(NE_ID NUMBER(3) NOT NULL '||CHR(10)||
                             ',AVAILABLE_CAPACITY NUMBER(2) NOT NULL '||CHR(10)||
                             ',STATUS NUMBER NOT NULL '||CHR(10)||
                             ',THRESH_HOLD NUMBER(2) '||CHR(10)||
                             ',CREATE_TIME NUMBER NOT NULL '||CHR(10)||
                             ',CREATE_BY VARCHAR2(100) NOT NULL '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(100) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_QRTZ_JOB_DETAILS  
BEGIN
  db_migration_create_table ('EAMS_QRTZ_JOB_DETAILS',
                             'CREATE TABLE EAMS_QRTZ_JOB_DETAILS '||CHR(10)||
                             '(JOB_NAME  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',JOB_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',DESCRIPTION VARCHAR2(250) NULL '||CHR(10)||
                             ',JOB_CLASS_NAME VARCHAR2(250) NOT NULL '||CHR(10)||
                             ',IS_DURABLE VARCHAR2(1) NOT NULL '||CHR(10)||
                             ',IS_VOLATILE VARCHAR2(1) NOT NULL '||CHR(10)||
                             ',IS_STATEFUL VARCHAR2(1) NOT NULL '||CHR(10)||
                             ',REQUESTS_RECOVERY VARCHAR2(1) NOT NULL '||CHR(10)||
                             ',JOB_DATA BLOB NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_QRTZ_JOB_LISTENERS  
BEGIN
  db_migration_create_table ('EAMS_QRTZ_JOB_LISTENERS',
                             'CREATE TABLE EAMS_QRTZ_JOB_LISTENERS '||CHR(10)||
                             '(JOB_NAME  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',JOB_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',JOB_LISTENER VARCHAR2(200) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_QRTZ_TRIGGERS  
BEGIN
  db_migration_create_table ('EAMS_QRTZ_TRIGGERS',
                             'CREATE TABLE EAMS_QRTZ_TRIGGERS '||CHR(10)||
                             '(TRIGGER_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',JOB_NAME  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',JOB_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',IS_VOLATILE VARCHAR2(1) NOT NULL '||CHR(10)||
                             ',DESCRIPTION VARCHAR2(250) NULL '||CHR(10)||
                             ',NEXT_FIRE_TIME NUMBER(13) NULL '||CHR(10)||
                             ',PREV_FIRE_TIME NUMBER(13) NULL '||CHR(10)||
                             ',PRIORITY NUMBER(13) NULL '||CHR(10)||
                             ',TRIGGER_STATE VARCHAR2(16) NOT NULL '||CHR(10)||
                             ',TRIGGER_TYPE VARCHAR2(8) NOT NULL '||CHR(10)||
                             ',START_TIME NUMBER(13) NOT NULL '||CHR(10)||
                             ',END_TIME NUMBER(13) NULL '||CHR(10)||
                             ',CALENDAR_NAME VARCHAR2(200) NULL '||CHR(10)||
                             ',MISFIRE_INSTR NUMBER(2) NULL '||CHR(10)||
                             ',JOB_DATA BLOB NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_QRTZ_SIMPLE_TRIGGERS  
BEGIN
  db_migration_create_table ('EAMS_QRTZ_SIMPLE_TRIGGERS',
                             'CREATE TABLE EAMS_QRTZ_SIMPLE_TRIGGERS '||CHR(10)||
                             '(TRIGGER_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',REPEAT_COUNT NUMBER(7) NOT NULL '||CHR(10)||
                             ',REPEAT_INTERVAL NUMBER(12) NOT NULL '||CHR(10)||
                             ',TIMES_TRIGGERED NUMBER(10) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_QRTZ_CRON_TRIGGERS  
BEGIN
  db_migration_create_table ('EAMS_QRTZ_CRON_TRIGGERS',
                             'CREATE TABLE EAMS_QRTZ_CRON_TRIGGERS '||CHR(10)||
                             '(TRIGGER_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',CRON_EXPRESSION VARCHAR2(120) NOT NULL '||CHR(10)||
                             ',TIME_ZONE_ID VARCHAR2(80) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_QRTZ_BLOB_TRIGGERS  
BEGIN
  db_migration_create_table ('EAMS_QRTZ_BLOB_TRIGGERS',
                             'CREATE TABLE EAMS_QRTZ_BLOB_TRIGGERS '||CHR(10)||
                             '(TRIGGER_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',BLOB_DATA BLOB NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_QRTZ_TRIGGER_LISTENERS  
BEGIN
  db_migration_create_table ('EAMS_QRTZ_TRIGGER_LISTENERS',
                             'CREATE TABLE EAMS_QRTZ_TRIGGER_LISTENERS '||CHR(10)||
                             '(TRIGGER_NAME  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_LISTENER VARCHAR2(200) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_QRTZ_CALENDARS  
BEGIN
  db_migration_create_table ('EAMS_QRTZ_CALENDARS',
                             'CREATE TABLE EAMS_QRTZ_CALENDARS '||CHR(10)||
                             '(CALENDAR_NAME  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',CALENDAR BLOB NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_QRTZ_PAUSED_TRIGGER_GRPS  
BEGIN
  db_migration_create_table ('EAMS_QRTZ_PAUSED_TRIGGER_GRPS',
                             'CREATE TABLE EAMS_QRTZ_PAUSED_TRIGGER_GRPS '||CHR(10)||
                             '(TRIGGER_GROUP  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_QRTZ_PAUSED_TRIGGER_GRPS  
BEGIN
  db_migration_create_table ('EAMS_QRTZ_PAUSED_TRIGGER_GRPS',
                             'CREATE TABLE EAMS_QRTZ_PAUSED_TRIGGER_GRPS '||CHR(10)||
                             '(TRIGGER_GROUP  VARCHAR2(200) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_QRTZ_FIRED_TRIGGERS  
BEGIN
  db_migration_create_table ('EAMS_QRTZ_FIRED_TRIGGERS',
                             'CREATE TABLE EAMS_QRTZ_FIRED_TRIGGERS  '||CHR(10)||
                             '(ENTRY_ID VARCHAR2(95) NOT NULL '||CHR(10)||
                             ',TRIGGER_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',TRIGGER_GROUP VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',IS_VOLATILE VARCHAR2(1) NOT NULL '||CHR(10)||
                             ',INSTANCE_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',FIRED_TIME NUMBER(13) NOT NULL '||CHR(10)||
                             ',PRIORITY NUMBER(13) NOT NULL '||CHR(10)||
                             ',STATE VARCHAR2(16) NOT NULL '||CHR(10)||
                             ',JOB_NAME VARCHAR2(200) NULL '||CHR(10)||
                             ',JOB_GROUP VARCHAR2(200) NULL '||CHR(10)||
                             ',IS_STATEFUL VARCHAR2(1) NULL '||CHR(10)||
                             ',REQUESTS_RECOVERY VARCHAR2(1) NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_QRTZ_SCHEDULER_STATE  
BEGIN
  db_migration_create_table ('EAMS_QRTZ_SCHEDULER_STATE',
                             'CREATE TABLE EAMS_QRTZ_SCHEDULER_STATE  '||CHR(10)||
                             '(INSTANCE_NAME VARCHAR2(200) NOT NULL, '||CHR(10)||
                             'LAST_CHECKIN_TIME NUMBER(13) NOT NULL, '||CHR(10)||
                             'CHECKIN_INTERVAL NUMBER(13) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_QRTZ_LOCKS  
BEGIN
  db_migration_create_table ('EAMS_QRTZ_LOCKS',
                             'CREATE TABLE EAMS_QRTZ_LOCKS '||CHR(10)||
                             '(LOCK_NAME  VARCHAR2(40) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_DBOARD_VIEW  
BEGIN
  db_migration_create_table ('EAMS_DBOARD_VIEW',
                             'CREATE TABLE EAMS_DBOARD_VIEW '||CHR(10)||
                             '(ID NUMBER '||CHR(10)||
                             ',NAME VARCHAR(50) '||CHR(10)||
                             ',DISPLAY_NAME VARCHAR (200) '||CHR(10)||
                             ',DESCRIPTION VARCHAR (500) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_PI_JOB_TRANS  
BEGIN
  db_migration_create_table ('EAMS_PI_JOB_TRANS',
                             'CREATE TABLE EAMS_PI_JOB_TRANS '||CHR(10)||
                             '(PI_ID NUMBER NOT NULL '||CHR(10)||
                             ',NE_ID NUMBER NOT NULL '||CHR(10)||
                             ',WORKFLOW_TRANS_ID  NUMBER NOT NULL '||CHR(10)||
                             ',JOB_GROUP_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',JOB_ID VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',PACKAGE_PRIORITY NUMBER(10) NOT NULL '||CHR(10)||
                             ',STATUS VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',LICENSE_START_DATE DATE NOT NULL '||CHR(10)||
                             ',JOB_SUBMISSION_TIME DATE NOT NULL '||CHR(10)||
                             ',LAST_PRIORITIZED_TIME DATE '||CHR(10)||
                             ',LAST_SCHEDULED_TIME DATE '||CHR(10)||
                             ',PRIORITIZATION_COUNT NUMBER '||CHR(10)||
                             ',PRIORITY_REASON_CODE NUMBER  '||CHR(10)||
                             ',USER_PRIORITY NUMBER '||CHR(10)||
                             ',USER_PRIORITIZED_TIME NUMBER '||CHR(10)||
                             ',USER_PRIORITIZED_REMARKS VARCHAR2(500) '||CHR(10)||
                             ',CREATE_TIME NUMBER '||CHR(10)||
                             ',CREATE_BY VARCHAR2(100) '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(100) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_CONFIG_REPOSITORY  
BEGIN
  db_migration_create_table ('EAMS_CONFIG_REPOSITORY',
                             'CREATE TABLE EAMS_CONFIG_REPOSITORY '||CHR(10)||
                             '(ID NUMBER NOT NULL '||CHR(10)||
                             ',VERSION VARCHAR2(5) DEFAULT ''1.0'' NOT NULL  '||CHR(10)||
                             ',SVC_NAME VARCHAR2(50) NOT NULL '||CHR(10)||
                             ',FUNCTION_NAME VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',INSTANCE_NAME VARCHAR2(75) '||CHR(10)||
                             ',FILE_NAME VARCHAR2(50) NOT NULL '||CHR(10)||
                             ',FILE_TYPE VARCHAR2(10) NOT NULL '||CHR(10)||
                             ',FILE_CONTENT CLOB '||CHR(10)||
                             ',STATUS NUMBER NOT NULL '||CHR(10)||
                             ',RECORD_CREATE_TIME NUMBER  NOT NULL '||CHR(10)||
                             ',USER_ID NUMBER '||CHR(10)||
                             ',VENDOR_ID NUMBER(10) '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',SOURCE NUMBER '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_ADAPT_ASSET_INFO  
BEGIN
  db_migration_create_table ('EAMS_ADAPT_ASSET_INFO',
                             'CREATE TABLE EAMS_ADAPT_ASSET_INFO '||CHR(10)||
                             '(ADAPT_ASSET_ID VARCHAR2(20) NOT NULL '||CHR(10)||
                             ',FIELD_ID NUMBER(10) NOT NULL  '||CHR(10)||
                             ',FIELD_VALUE VARCHAR2(4000) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table CCE_RPT_DISPLAY_OPTIONS  
BEGIN
  db_migration_create_table ('CCE_RPT_DISPLAY_OPTIONS',
                             'CREATE TABLE CCE_RPT_DISPLAY_OPTIONS '||CHR(10)||
                             '(DISPLAY_OPT_ID NUMBER(4) NOT NULL '||CHR(10)||
                             ',DISPLAY_OPT_NAME VARCHAR2(20) NOT NULL '||CHR(10)||
                             ',DISPLAY_OPT_DISP_NAME VARCHAR2(20) NOT NULL '||CHR(10)||
                             ',DISPLAY_OPT_DESC VARCHAR2(100) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_INGEST_ASSET_ASSET_ASSOC  
BEGIN
  db_migration_create_table ('EAMS_INGEST_ASSET_ASSET_ASSOC',
                             'CREATE TABLE EAMS_INGEST_ASSET_ASSET_ASSOC '||CHR(10)||
                             '(ITEM_CATEGORY_ID         NUMBER(10)           NOT NULL '||CHR(10)||
                             ',ITEM_CATEGORY_VERSION    VARCHAR2(10 BYTE)    NOT NULL '||CHR(10)||
                             ',ASSET_ID                 VARCHAR2(20 BYTE)    NOT NULL '||CHR(10)||
                             ',ASSOC_ASSET_ID           VARCHAR2(20 BYTE)    NOT NULL '||CHR(10)||
                             ',CREATE_TIME              NUMBER               NOT NULL '||CHR(10)||
                             ',CREATE_BY                VARCHAR2(20 BYTE)    NOT NULL '||CHR(10)||
                             ',LAST_MODIFY_TIME         NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY           VARCHAR2(20 BYTE) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_PUBLISH_SUB_STATUS  
BEGIN
  db_migration_create_table ('EAMS_PUBLISH_SUB_STATUS', 
                             'CREATE TABLE EAMS_PUBLISH_SUB_STATUS '||CHR(10)||
                             '(SUB_STATUS_CODE NUMBER(10) NOT NULL '||CHR(10)||
                             ',SUB_STATUS_DESC VARCHAR2(300) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_CATCHER_MONITOR  
BEGIN
  db_migration_create_table ('EAMS_CATCHER_MONITOR', 
                             'CREATE TABLE EAMS_CATCHER_MONITOR '||CHR(10)||
                             '(NE_ID NUMBER NOT NULL '||CHR(10)||
                             ',NE_NAME VARCHAR2(30) '||CHR(10)||
                             ',PKG_PENDING NUMBER NOT NULL '||CHR(10)||
                             ',PKG_IN_PROGRESS NUMBER NOT NULL '||CHR(10)||
                             ',PKG_REJECTED NUMBER NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_AR_MAP_INFO  
BEGIN
  db_migration_create_table ('EAMS_AR_MAP_INFO', 
                             'CREATE TABLE EAMS_AR_MAP_INFO '||CHR(10)||
                             '(AR_MAP_ID NUMBER NOT NULL '||CHR(10)||
                             ',AR_MAP_NAME VARCHAR2(500) NOT NULL '||CHR(10)||
                             ',STATUS VARCHAR2(50) '||CHR(10)||
                             ',DEFAULT_MAP VARCHAR2(1) DEFAULT ''N'' NOT NULL '||CHR(10)||
                             ',TARGET_PLATFORM VARCHAR2(100) NOT NULL '||CHR(10)||
                             ',CREATE_TIME NUMBER NOT NULL '||CHR(10)||
                             ',CREATE_BY VARCHAR2(20 BYTE) NOT NULL '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(20 BYTE) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_RM_POLL_STATUS  
BEGIN
  db_migration_create_table ('EAMS_RM_POLL_STATUS', 
                             'CREATE TABLE EAMS_RM_POLL_STATUS '||CHR(10)||
                             '(POLL_ID NUMBER NOT NULL '||CHR(10)||
                             ',NE_ID NUMBER NOT NULL '||CHR(10)||
                             ',WORKFLOW_TRANS_ID NUMBER NOT NULL '||CHR(10)||
                             ',OPERATION_ID VARCHAR2(256) NOT NULL '||CHR(10)||
                             ',JOB_ID VARCHAR2(256) NOT NULL '||CHR(10)||
                             ',STATUS VARCHAR2(50) NOT NULL '||CHR(10)||
                             ',POLL_COUNT NUMBER '||CHR(10)||
                             ',POLL_START_TIME NUMBER '||CHR(10)||
                             ',LAST_POLL_TIME NUMBER '||CHR(10)||
                             ',POLL_SUCCESS_TIME NUMBER  '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_POLLING_JOBS  
BEGIN
  db_migration_create_table ('EAMS_POLLING_JOBS', 
                             'CREATE TABLE EAMS_POLLING_JOBS '||CHR(10)||
                             '(JOB_ID NUMBER NOT NULL '||CHR(10)||
                             ',JOB_NAME VARCHAR2(100) NOT NULL '||CHR(10)||
                             ',IMPL_CLASS VARCHAR2(256) NOT NULL '||CHR(10)||
                             ',JOB_INTERVAL NUMBER '||CHR(10)||
                             ',JOB_INTERVAL_UNIT NUMBER '||CHR(10)||
                             ',RESET_ON_STARTUP VARCHAR2(1) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_AR_MAP_FIELD_INFO  
BEGIN
  db_migration_create_table ('EAMS_AR_MAP_FIELD_INFO', 
                             'CREATE TABLE EAMS_AR_MAP_FIELD_INFO '||CHR(10)||
                             '(AR_MAP_ID NUMBER NOT NULL '||CHR(10)||
                             ',FIELD_ID NUMBER(10) NOT NULL '||CHR(10)||
                             ',FIELD_VALUE VARCHAR2(4000 BYTE) '||CHR(10)||
                             ',MAP_TYPE VARCHAR2(50) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_CATCHER_MONITOR_FILES  
BEGIN
  db_migration_create_table ('EAMS_CATCHER_MONITOR_FILES', 
                             'CREATE TABLE EAMS_CATCHER_MONITOR_FILES '||CHR(10)||
                             '(ID NUMBER NOT NULL '||CHR(10)||
                             ',NE_ID NUMBER NOT NULL '||CHR(10)||
                             ',NE_NAME VARCHAR2(100) '||CHR(10)||
                             ',FILE_NAME VARCHAR2(2000) NOT NULL '||CHR(10)||
                             ',FILE_STATUS VARCHAR2(20) NOT NULL '||CHR(10)||
                             ',FILE_LAST_MOD_TIME NUMBER '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_WORKFLOW_TRANS_INFO  
BEGIN
  db_migration_create_table ('EAMS_WORKFLOW_TRANS_INFO', 
                             'CREATE TABLE EAMS_WORKFLOW_TRANS_INFO '||CHR(10)||
                             '(WORKFLOW_OP_ID NUMBER NOT NULL '||CHR(10)||
                             ',FIELD_ID NUMBER(10) NOT NULL '||CHR(10)||
                             ',FIELD_VALUE VARCHAR2(4000) '||CHR(10)||
                             ',CONTEXT_TYPE NUMBER NOT NULL '||CHR(10)||
                             ',CONTEXT_INFO XMLTYPE '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128M_DAT'
                             );
END;
/

PROMPT Creating Table EAMS_INFLIGHT_PACKAGE  
DECLARE
  l_dummy INTEGER;
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_INFLIGHT_PACKAGE';
  l_column_name CONSTANT VARCHAR2(30) := 'PUB_TOKEN_ID';
  
  l_sql VARCHAR2(4096) := 'CREATE TABLE EAMS_INFLIGHT_PACKAGE '||CHR(10)||
                          '(ALT_CODE VARCHAR2(50) NOT NULL '||CHR(10)||
                          ',PROVIDER_ID VARCHAR2(20) NOT NULL '||CHR(10)||
                          ',ITEM_CATEGORY_ID NUMBER '||CHR(10)||
                          ',PUBLISH_TOKEN VARCHAR2(256) '||CHR(10)||
                          ',NOTIFICATION_URL VARCHAR2(100) '||CHR(10)||
                          ',INFLIGHT_STATUS VARCHAR2(20) '||CHR(10)||
                          ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                          ',ITEM_CATEGORY_VERSION VARCHAR2(10) '||CHR(10)||
                          ') TABLESPACE EAMS_MOT_128M_DAT';
BEGIN
  SELECT 1
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  EXECUTE IMMEDIATE 'DROP TABLE '||l_table_name;
  EXECUTE IMMEDIATE l_sql;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN 
         BEGIN
           BEGIN
             SELECT 1
             INTO   l_dummy
             FROM   user_tables
             WHERE  table_name = l_table_name;

             EXCEPTION
               WHEN NO_DATA_FOUND THEN 
                    EXECUTE IMMEDIATE l_sql;
           END;
         END;
END;
/

PROMPT Creating Table EAMS_INFLIGHT_PLATFORM_ASSOC  
DECLARE
  l_dummy INTEGER;
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_INFLIGHT_PLATFORM_ASSOC';
  l_column_name CONSTANT VARCHAR2(30) := 'PUB_TOKEN_ID';
  
  l_sql VARCHAR2(4096) := 'CREATE TABLE EAMS_INFLIGHT_PLATFORM_ASSOC '||CHR(10)||
                          '(ALT_CODE VARCHAR2(50) '||CHR(10)||
                          ',PROVIDER_ID VARCHAR2(50) '||CHR(10)||
                          ',PROFILE_ID NUMBER '||CHR(10)||
                          ',PUBLISH_ID NUMBER '||CHR(10)||
                          ',STATUS  VARCHAR2(50) '||CHR(10)||
                          ',PUBLISH_TOKEN VARCHAR2(256)  '||CHR(10)||
                          ') TABLESPACE EAMS_MOT_128M_DAT';
BEGIN
  SELECT 1
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  EXECUTE IMMEDIATE 'DROP TABLE '||l_table_name;
  EXECUTE IMMEDIATE l_sql;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN 
         BEGIN
           BEGIN
             SELECT 1
             INTO   l_dummy
             FROM   user_tables
             WHERE  table_name = l_table_name;

             EXCEPTION
               WHEN NO_DATA_FOUND THEN 
                    EXECUTE IMMEDIATE l_sql;
           END;
         END;
END;
/

PROMPT Creating Table EAMS_PACKAGE_STORAGE_DETAILS  
BEGIN
  db_migration_create_table ('EAMS_PACKAGE_STORAGE_DETAILS',
                             'CREATE TABLE EAMS_PACKAGE_STORAGE_DETAILS '||CHR(10)||
                             '(ITEM_CATEGORY_ID NUMBER(10) NOT NULL '||CHR(10)||
                             ',ITEM_CATEGORY_VERSION VARCHAR2(10) NOT NULL '||CHR(10)||
                             ',STATUS  VARCHAR2(50) NOT NULL '||CHR(10)||
                             ',WORKING_STORAGE_LOCATION  VARCHAR2(4000) NOT NULL '||CHR(10)||
                             ',BACKUP_STORAGE_LOCATION VARCHAR2(4000) '||CHR(10)||
                             ',CREATE_TIME NUMBER NOT NULL '||CHR(10)||
                             ',CREATE_BY VARCHAR2(20)  NOT NULL '||CHR(10)||
                             ',LAST_ACCESSED_TIME  NUMBER NOT NULL '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(20) '||CHR(10)||
                             ',LAST_STATUS_MODIFY_TIME NUMBER '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_DBOARD_USER'
BEGIN
  db_migration_create_table ('EAMS_DBOARD_USER',
                             'CREATE TABLE EAMS_DBOARD_USER '||CHR(10)||
                             '(LOGIN_NAME VARCHAR2(30) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_DBOARD'
BEGIN
  db_migration_create_table ('EAMS_DBOARD',
                             'CREATE TABLE EAMS_DBOARD '||CHR(10)||
                             '(ID INTEGER NOT NULL '||CHR(10)||
                             ',DBOARD_NAME VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',DISPLAY_NAME VARCHAR2(75) '||CHR(10)||
                             ',DESCRIPTION VARCHAR2(500) '||CHR(10)||
                             ',LAUNCH_URL VARCHAR2(200) '||CHR(10)||
                             ',DISPLAY_ORDER INTEGER '||CHR(10)||
                             ',LAYOUT_TYPE VARCHAR2(30) '||CHR(10)||
                             ',STATUS VARCHAR2(20) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_DBOARD_ITEM'
DECLARE
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_DBOARD_ITEM';
  l_column_name CONSTANT VARCHAR2(30) := 'ID';
  l_dummy INTEGER;
BEGIN
  BEGIN  
    SELECT 1
    INTO   l_dummy
    FROM   user_tab_columns
    WHERE  table_name = l_table_name
    AND    column_name = l_column_name;
    
    EXECUTE IMMEDIATE 'DROP TABLE EAMS_DBOARD_ITEMS_DISP';
    EXECUTE IMMEDIATE 'DROP TABLE EAMS_DBOARD_VIEW_ITEMS_ASSOC';
    EXECUTE IMMEDIATE 'DROP TABLE '||l_table_name;
    
    EXCEPTION 
      WHEN NO_DATA_FOUND THEN NULL;           
  END;

  db_migration_create_table ('EAMS_DBOARD_ITEM',
                             'CREATE TABLE EAMS_DBOARD_ITEM '||CHR(10)||
                             '(WIDGET_ID INTEGER NOT NULL '||CHR(10)||
                             ',WIDGET_NAME VARCHAR2(50) NOT NULL '||CHR(10)||
                             ',DISPLAY_NAME VARCHAR2(100) '||CHR(10)||
                             ',DESCRIPTION CHAR(500) '||CHR(10)||
                             ',DISPLAY_ORDER INTEGER '||CHR(10)||
                             ',REFRESH_PERIOD INTEGER '||CHR(10)||
                             ',STATUS VARCHAR2(20) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_DBOARD_ITEM_ASSOC'
BEGIN
  db_migration_create_table ('EAMS_DBOARD_ITEM_ASSOC',
                             'CREATE TABLE EAMS_DBOARD_ITEM_ASSOC '||CHR(10)||
                             '(WIDGET_ID INTEGER NOT NULL '||CHR(10)||
                             ',DBOARD_ID INTEGER '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_DBOARD_USR_ITEM_ASSOC'
BEGIN
  db_migration_create_table ('EAMS_DBOARD_USR_ITEM_ASSOC',
                             'CREATE TABLE EAMS_DBOARD_USR_ITEM_ASSOC '||CHR(10)||
                             '(LOGIN_NAME VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',WIDGET_ID INTEGER NOT NULL '||CHR(10)||
                             ',DBOARD_ID INTEGER NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_DBOARD_ITEM_PROPS'
BEGIN
  db_migration_create_table ('EAMS_DBOARD_ITEM_PROPS',
                             'CREATE TABLE EAMS_DBOARD_ITEM_PROPS '||CHR(10)||
                             '(NAME VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',VALUE VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',WIDGET_ID INTEGER NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

--Gururaj added the new two columns(resource_provider_id,resource_provider_name)
PROMPT Creating Table 'EAMS_RESOURCE'
BEGIN
  db_migration_create_table ('EAMS_RESOURCE',
                             'CREATE TABLE EAMS_RESOURCE  '||CHR(10)||
                             '(RESOURCE_ID NUMBER NOT NULL '||CHR(10)||
                             ',RESOURCE_UID VARCHAR2(256) NOT NULL '||CHR(10)||
                             ',RESOURCE_TYPE VARCHAR2(100) NOT NULL '||CHR(10)||
                             ',RESOURCE_URI VARCHAR2(4000) NOT NULL '||CHR(10)||
                             ',RESOURCE_SIZE NUMBER NOT NULL '||CHR(10)||
                             ',CREATE_TIME NUMBER NOT NULL '||CHR(10)||
                             ',RESOURCE_SOURCE NUMBER '||CHR(10)||
                             ',RESOURCE_DEST NUMBER '||CHR(10)||
			     ',RESOURCE_PROVIDER_ID VARCHAR2(256) '||CHR(10)||
			     ',RESOURCE_PROVIDER_NAME VARCHAR2(256) '||CHR(10)||
                             ',STATUS VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',CHECKSUM VARCHAR2(1000) '||CHR(10)||
                             ',PACKAGED VARCHAR2(1) '||CHR(10)||
                             ',DISCOVER_TIME NUMBER '||CHR(10)||
                             ',LAST_ERROR_TIME NUMBER '||CHR(10)||
                             ',LAST_ERROR_RESOLVE_TIME NUMBER '||CHR(10)||
                             ',REJECT_TIME NUMBER '||CHR(10)||
                             ',INGEST_TIME NUMBER '||CHR(10)||
                             ',CREATE_BY VARCHAR2(20) '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(20) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_RESOURCE_INFO'
BEGIN
  db_migration_create_table ('EAMS_RESOURCE_INFO',
                             'CREATE TABLE EAMS_RESOURCE_INFO '||CHR(10)||
                             '(RESOURCE_ID NUMBER NOT NULL '||CHR(10)||
                             ',FIELD_NAME VARCHAR2(500) NOT NULL '||CHR(10)||
                             ',FIELD_VALUE VARCHAR2(4000) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_RESOURCE_RESOURCE_ASSOC'
BEGIN
  db_migration_create_table ('EAMS_RESOURCE_RESOURCE_ASSOC',
                             'CREATE TABLE EAMS_RESOURCE_RESOURCE_ASSOC '||CHR(10)||
                             '(PARENT_RESOURCE_ID NUMBER NOT NULL '||CHR(10)||
                             ',RESOURCE_ID NUMBER NOT NULL '||CHR(10)||
                             ',STATUS VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',ASSOC_TIME NUMBER '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

--Gururaja added a new column ROLE_DISP_NAME
PROMPT Creating Table 'EAMS_RESOURCE_ROLE'
BEGIN
  db_migration_create_table ('EAMS_RESOURCE_ROLE',
                             'CREATE TABLE EAMS_RESOURCE_ROLE '||CHR(10)||
                             '(ROLE_ID NUMBER NOT NULL '||CHR(10)||
                             ',ROLE_NAME VARCHAR2(100) NOT NULL '||CHR(10)||
			     ',ROLE_DISP_NAME VARCHAR2(100) NOT NULL '||CHR(10)||
                             ',ROLE_TYPE VARCHAR2(30) '||CHR(10)||
                             ',STATUS VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',CREATE_TIME NUMBER NOT NULL '||CHR(10)||
                             ',CREATE_BY VARCHAR2(20) '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(20) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_RESOURCE_ROLE_MAP'
BEGIN
  db_migration_create_table ('EAMS_RESOURCE_ROLE_MAP',
                             'CREATE TABLE EAMS_RESOURCE_ROLE_MAP '||CHR(10)||
                             '(RESOURCE_MAP_ID NUMBER NOT NULL '||CHR(10)||
                             ',RESOURCE_ID NUMBER NOT NULL '||CHR(10)||
                             ',ROLE_ID NUMBER NOT NULL '||CHR(10)||
                             ',ROLE_TYPE VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',STATUS VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',CREATE_TIME NUMBER NOT NULL '||CHR(10)||
                             ',CREATE_BY VARCHAR2(20) '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(20) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_RESOURCE_ROLE_MAP_INFO'
BEGIN
  db_migration_create_table ('EAMS_RESOURCE_ROLE_MAP_INFO',
                             'CREATE TABLE EAMS_RESOURCE_ROLE_MAP_INFO '||CHR(10)||
                             '(RESOURCE_MAP_ID NUMBER NOT NULL '||CHR(10)||
                             ',FIELD_NAME VARCHAR2(500) NOT NULL '||CHR(10)||
                             ',FIELD_VALUE VARCHAR2(4000) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_RULEGROUP'
BEGIN
  db_migration_create_table ('EAMS_RULEGROUP',
                             'CREATE TABLE EAMS_RULEGROUP '||CHR(10)||
                             '(RULEGROUP_ID NUMBER NOT NULL, '||CHR(10)||
                             'RULEGROUP_NAME VARCHAR2(256) NOT NULL, '||CHR(10)||
                             'STATUS VARCHAR2(30) NOT NULL, '||CHR(10)||
                             'CREATE_TIME NUMBER NOT NULL, '||CHR(10)||
                             'CREATE_BY VARCHAR2(20), '||CHR(10)||
                             'LAST_MODIFY_TIME NUMBER, '||CHR(10)||
                             'LAST_MODIFY_BY VARCHAR2(20) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

--Gururaj changed NEW_WORKFLOW_OP_ID from Not Null to Null 
PROMPT Creating Table 'EAMS_WF_RESOURCE_MAP_ASSOC'
BEGIN
  db_migration_create_table ('EAMS_WF_RESOURCE_MAP_ASSOC',
                             'CREATE TABLE EAMS_WF_RESOURCE_MAP_ASSOC '||CHR(10)||
                             '(WORKFLOW_OP_ID NUMBER NOT NULL '||CHR(10)||
                             ',RESOURCE_MAP_ID NUMBER NOT NULL '||CHR(10)||
                             ',POOLED VARCHAR2(1) NOT NULL '||CHR(10)||
                             ',STATUS VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',NEW_WORKFLOW_OP_ID NUMBER '||CHR(10)||
                             ',CREATE_TIME NUMBER NOT NULL '||CHR(10)||
                             ',CREATE_BY VARCHAR2(20) '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(20) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_WORKFLOW_OP_INFO'
BEGIN
  db_migration_create_table ('EAMS_WORKFLOW_OP_INFO',
                             'CREATE TABLE EAMS_WORKFLOW_OP_INFO '||CHR(10)||
                             '(WORKFLOW_OP_ID NUMBER NOT NULL '||CHR(10)||
                             ',FIELD_NAME VARCHAR2(500) NOT NULL '||CHR(10)||
                             ',FIELD_VALUE VARCHAR2(4000) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_WORKFLOW_OP_TRANS'
BEGIN
  db_migration_create_table ('EAMS_WORKFLOW_OP_TRANS',
                             'CREATE TABLE EAMS_WORKFLOW_OP_TRANS '||CHR(10)||
                             '(WORKFLOW_OP_ID NUMBER NOT NULL '||CHR(10)||
                             ',WORKFLOW_ID NUMBER NOT NULL '||CHR(10)||
                             ',STATUS VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',CREATE_TIME NUMBER NOT NULL '||CHR(10)||
                             ',TRANS_START_TIME NUMBER '||CHR(10)||
                             ',TRANS_END_TIME NUMBER '||CHR(10)||
                             ',RESOURCE_COUNT NUMBER '||CHR(10)||
                             ',RESOURCE_ERROR_COUNT NUMBER '||CHR(10)||
                             ',RESOURCE_COMPLETED_COUNT NUMBER '||CHR(10)||
                             ',CREATE_BY VARCHAR2(20) '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(20) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_WORKFLOW_WORKSTEP_ASSOC'
BEGIN
  db_migration_create_table ('EAMS_WORKFLOW_WORKSTEP_ASSOC',
                             'CREATE TABLE EAMS_WORKFLOW_WORKSTEP_ASSOC '||CHR(10)||
                             '(WORKFLOW_ID NUMBER NOT NULL '||CHR(10)||
                             ',WORKSTEP_ID NUMBER NOT NULL '||CHR(10)||
                             ',SEQUENCE_NO NUMBER NOT NULL '||CHR(10)||
                             ',STATUS VARCHAR2(30) '||CHR(10)||
                             ',CREATE_TIME NUMBER NOT NULL '||CHR(10)||
                             ',CREATE_BY VARCHAR2(20) '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(20) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_WORKSTEP'
BEGIN
  db_migration_create_table ('EAMS_WORKSTEP',
                             'CREATE TABLE EAMS_WORKSTEP '||CHR(10)||
                             '(WORKSTEP_ID NUMBER NOT NULL '||CHR(10)||
                             ',WORKSTEP_NAME VARCHAR2(256) NOT NULL '||CHR(10)||
                             ',STATUS VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',CREATE_TIME NUMBER NOT NULL '||CHR(10)||
                             ',CREATE_BY VARCHAR2(20) '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(20) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

--Gururaja changed RESOURCE_POOL COLUMN to WORKSTEP_TYPE
PROMPT Creating Table 'EAMS_WORKSTEP_ROLE_ASSOC'
BEGIN
  db_migration_create_table ('EAMS_WORKSTEP_ROLE_ASSOC',
                             'CREATE TABLE EAMS_WORKSTEP_ROLE_ASSOC '||CHR(10)||
                             '(WORKSTEP_ID NUMBER NOT NULL '||CHR(10)||
                             ',ROLE_ID NUMBER NOT NULL '||CHR(10)||
                             ',STATUS VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',WORKSTEP_TYPE VARCHAR2(50) DEFAULT ''SINGLE-RESOURCE'' '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_WORKSTEP_RULEGROUP_ASSOC'
BEGIN
  db_migration_create_table ('EAMS_WORKSTEP_RULEGROUP_ASSOC',
                             'CREATE TABLE EAMS_WORKSTEP_RULEGROUP_ASSOC '||CHR(10)||
                             '(WORKSTEP_ID NUMBER NOT NULL '||CHR(10)||
                             ',RULEGROUP_ID NUMBER NOT NULL '||CHR(10)||
                             ',STATUS VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',CREATE_TIME NUMBER NOT NULL '||CHR(10)||
                             ',CREATE_BY VARCHAR2(20) '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(20) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

--Gururaja changed the OUTBOUND_RESOURCE_MAP_ID column from not null to null
PROMPT Creating Table 'EAMS_WORKSTEP_TRANS'
BEGIN
  db_migration_create_table ('EAMS_WORKSTEP_TRANS',
                             'CREATE TABLE EAMS_WORKSTEP_TRANS '||CHR(10)||
                             '(WORKSTEP_TRANS_ID NUMBER NOT NULL '||CHR(10)||
                             ',WORKFLOW_OP_ID NUMBER NOT NULL '||CHR(10)||
                             ',WORKFLOW_STEP_ID NUMBER NOT NULL '||CHR(10)||
                             ',STATUS VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',INBOUND_RESOURCE_MAP_ID NUMBER NOT NULL '||CHR(10)||
                             ',OUTBOUND_RESOURCE_MAP_ID NUMBER  '||CHR(10)||
                             ',CREATE_TIME NUMBER NOT NULL '||CHR(10)||
                             ',CREATE_BY VARCHAR2(20) '||CHR(10)||
                             ',TRANS_START_TIME NUMBER '||CHR(10)||
                             ',TRANS_END_TIME NUMBER '||CHR(10)||
                             ',RESOURCE_COUNT NUMBER '||CHR(10)||
                             ',RESOURCE_ERROR_COUNT NUMBER '||CHR(10)||
                             ',RESOURCE_COMPLETED_COUNT NUMBER '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(20) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

--Gururaja changed the column from field_id to field_name
PROMPT Creating Table 'EAMS_WORKSTEP_TRANS_INFO'
BEGIN
  db_migration_create_table ('EAMS_WORKSTEP_TRANS_INFO',
                             'CREATE TABLE EAMS_WORKSTEP_TRANS_INFO '||CHR(10)||
                             '(WORKSTEP_TRANS_ID NUMBER NOT NULL '||CHR(10)||
                             ',FIELD_NAME VARCHAR2(500) '||CHR(10)||
                             ',FIELD_VALUE VARCHAR2(4000) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_PKG_STORAGE_EVENTS'
BEGIN
  db_migration_create_table ('EAMS_PKG_STORAGE_EVENTS',
                             'CREATE TABLE EAMS_PKG_STORAGE_EVENTS '||CHR(10)||
                             '(EVENT_ID NUMBER(10) NOT NULL '||CHR(10)||
                             ',ITEM_CATEGORY_ID NUMBER(10) NOT NULL '||CHR(10)||
                             ',ITEM_CATEGORY_VERSION VARCHAR2(10) NOT NULL '||CHR(10)||
                             ',EVENT_TIME NUMBER NOT NULL '||CHR(10)||
                             ',EVENT_USER VARCHAR2(20) '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_PKG_STORAGE_EVENT_DETAILS'
BEGIN
  db_migration_create_table ('EAMS_PKG_STORAGE_EVENT_DETAILS',
                             'CREATE TABLE EAMS_PKG_STORAGE_EVENT_DETAILS '||CHR(10)||
                             '(EVENT_ID NUMBER(10) NOT NULL '||CHR(10)||
                             ',EVENT_MESSAGE_KEY VARCHAR2(100) NOT NULL '||CHR(10)||
                             ',EVENT_MESSAGE_VALUE VARCHAR2(500) NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_RM_JOB_AUDIT'
BEGIN
  db_migration_create_table ('EAMS_RM_JOB_AUDIT',
                             'CREATE TABLE EAMS_RM_JOB_AUDIT '||CHR(10)||
                             '(JOB_ID VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',JOB_GROUP_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',NE_ID NUMBER NOT NULL '||CHR(10)||
                             ',WORKFLOW_TRANS_ID NUMBER NOT NULL '||CHR(10)||
                             ',SLOTS_OCCUPIED NUMBER NOT NULL '||CHR(10)||
                             ',RESPONSE_COUNT NUMBER '||CHR(10)||
                             ',REQUEST_MODE VARCHAR2(20) NOT NULL '||CHR(10)||
                             ',STATUS VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',JOB_SUBMISSION_TIME NUMBER NOT NULL '||CHR(10)||
                             ',CREATE_TIME NUMBER '||CHR(10)||
                             ',CREATE_BY VARCHAR2(100) '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(100) '||CHR(10)||
                             ',REQUEST_CONTEXT BLOB  NOT NULL '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

PROMPT Creating Table 'EAMS_RM_ASSET_AUDIT'
BEGIN
  db_migration_create_table ('EAMS_RM_ASSET_AUDIT',
                             'CREATE TABLE EAMS_RM_ASSET_AUDIT  '||CHR(10)||
                             '(JOB_ID VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',JOB_GROUP_NAME VARCHAR2(200) NOT NULL '||CHR(10)||
                             ',NE_ID NUMBER NOT NULL '||CHR(10)||
                             ',WORKFLOW_TRANS_ID NUMBER NOT NULL '||CHR(10)||
                             ',REQUEST_ID VARCHAR2(50) NOT NULL '||CHR(10)||
                             ',OP_ID VARCHAR2(50) '||CHR(10)||
                             ',ADAPTER  VARCHAR2(20) NOT NULL '||CHR(10)||
                             ',ASSET_STATUS VARCHAR2(30) NOT NULL '||CHR(10)||
                             ',CREATE_TIME NUMBER '||CHR(10)||
                             ',CREATE_BY VARCHAR2(100) '||CHR(10)||
                             ',LAST_MODIFY_TIME NUMBER '||CHR(10)||
                             ',LAST_MODIFY_BY VARCHAR2(100) '||CHR(10)||
                             ',RESPONSE_CONTEXT BLOB '||CHR(10)||
                             ') TABLESPACE EAMS_MOT_128K_DAT'
                             );
END;
/

--
-- Add columns 
--

PROMPT Add columns

PROMPT Adding column EAMS_WI_ERROR_LOG.LAST_STATUS_MODIFY_TIME
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_WI_ERROR_LOG';
  l_column_name CONSTANT VARCHAR2(30) := 'LAST_STATUS_MODIFY_TIME';  
  l_default_value VARCHAR2(30) := '1230782400000';
  l_column_datatype CONSTANT VARCHAR2(128) := 'NUMBER DEFAULT '||l_default_value;  
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  EXECUTE IMMEDIATE 'UPDATE '||l_table_name||' SET '||l_column_name||' = '||l_default_value||' '||
                    'WHERE '||l_column_name||' IS NULL';
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_ADAPT_ASSET.LAST_STATUS_MODIFY_TIME
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_ADAPT_ASSET';
  l_column_name CONSTANT VARCHAR2(30) := 'LAST_STATUS_MODIFY_TIME';  
  l_default_value VARCHAR2(30) := '1230782400000';
  l_column_datatype CONSTANT VARCHAR2(128) := 'NUMBER DEFAULT '||l_default_value;  
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  EXECUTE IMMEDIATE 'UPDATE '||l_table_name||' SET '||l_column_name||' = '||l_default_value||' '||
                    'WHERE '||l_column_name||' IS NULL';
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_QA_ASSET.LAST_STATUS_MODIFY_TIME
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_QA_ASSET';
  l_column_name CONSTANT VARCHAR2(30) := 'LAST_STATUS_MODIFY_TIME';  
  l_default_value VARCHAR2(30) := '1230782400000';
  l_column_datatype CONSTANT VARCHAR2(128) := 'NUMBER DEFAULT '||l_default_value;  
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  EXECUTE IMMEDIATE 'UPDATE '||l_table_name||' SET '||l_column_name||' = '||l_default_value||' '||
                    'WHERE '||l_column_name||' IS NULL';
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_INGEST_ASSET.LAST_STATUS_MODIFY_TIME
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_INGEST_ASSET';
  l_column_name CONSTANT VARCHAR2(30) := 'LAST_STATUS_MODIFY_TIME';  
  l_default_value VARCHAR2(30) := '1230782400000';
  l_column_datatype CONSTANT VARCHAR2(128) := 'NUMBER DEFAULT '||l_default_value;  
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  EXECUTE IMMEDIATE 'UPDATE '||l_table_name||' SET '||l_column_name||' = '||l_default_value||' '||
                    'WHERE '||l_column_name||' IS NULL';
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_INGEST_PACKAGE.LAST_STATUS_MODIFY_TIME
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_INGEST_PACKAGE';
  l_column_name CONSTANT VARCHAR2(30) := 'LAST_STATUS_MODIFY_TIME';  
  l_default_value VARCHAR2(30) := '1230782400000';
  l_column_datatype CONSTANT VARCHAR2(128) := 'NUMBER DEFAULT '||l_default_value;  
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  EXECUTE IMMEDIATE 'UPDATE '||l_table_name||' SET '||l_column_name||' = '||l_default_value||' '||
                    'WHERE '||l_column_name||' IS NULL';
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_PUBLISH_ASSET.LAST_STATUS_MODIFY_TIME
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_ASSET';
  l_column_name CONSTANT VARCHAR2(30) := 'LAST_STATUS_MODIFY_TIME';  
  l_default_value VARCHAR2(30) := '1230782400000';
  l_column_datatype CONSTANT VARCHAR2(128) := 'NUMBER DEFAULT '||l_default_value;  
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  EXECUTE IMMEDIATE 'UPDATE '||l_table_name||' SET '||l_column_name||' = '||l_default_value||' '||
                    'WHERE '||l_column_name||' IS NULL';
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_PUBLISH_PACKAGE.LAST_STATUS_MODIFY_TIME
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PACKAGE';
  l_column_name CONSTANT VARCHAR2(30) := 'LAST_STATUS_MODIFY_TIME';  
  l_default_value VARCHAR2(30) := '1230782400000';
  l_column_datatype CONSTANT VARCHAR2(128) := 'NUMBER DEFAULT '||l_default_value;  
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  EXECUTE IMMEDIATE 'UPDATE '||l_table_name||' SET '||l_column_name||' = '||l_default_value||' '||
                    'WHERE '||l_column_name||' IS NULL';
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_PUBLISH_PKG_APP_DATA.STATUS
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PKG_APP_DATA';
  l_column_name CONSTANT VARCHAR2(30) := 'STATUS';
  l_column_datatype CONSTANT VARCHAR2(30) := 'VARCHAR2(30)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_PUBLISH_PKG_APP_DATA.ITEM_CATEGORY_ID
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PKG_APP_DATA';
  l_column_name CONSTANT VARCHAR2(30) := 'ITEM_CATEGORY_ID';
  l_column_datatype CONSTANT VARCHAR2(30) := 'NUMBER(10)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_PUBLISH_PKG_APP_DATA.ITEM_CATEGORY_VERSION
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PKG_APP_DATA';
  l_column_name CONSTANT VARCHAR2(30) := 'ITEM_CATEGORY_VERSION';
  l_column_datatype CONSTANT VARCHAR2(30) := 'VARCHAR2(10)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_PUBLISH_PKG_APP_DATA.NE_ID
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PKG_APP_DATA';
  l_column_name CONSTANT VARCHAR2(30) := 'NE_ID';
  l_column_datatype CONSTANT VARCHAR2(30) := 'NUMBER(11)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_VENDOR_METADATA_EXTN.REQUIRED
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_VENDOR_METADATA_EXTN';
  l_column_name CONSTANT VARCHAR2(30) := 'REQUIRED';
  l_column_datatype CONSTANT VARCHAR2(30) := 'VARCHAR2(1)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT  Expand EAMS_INGEST_PACKAGE.OPERATION_ID to VARCHAR2(256)
DECLARE 
  l_data_length INTEGER;
BEGIN
  SELECT data_length
  INTO   l_data_length
  FROM   user_tab_columns
  WHERE  table_name = 'EAMS_INGEST_PACKAGE'
  AND    column_name = 'OPERATION_ID';
  
  IF l_data_length < 256 THEN  
     EXECUTE IMMEDIATE 'ALTER TABLE EAMS_INGEST_PACKAGE MODIFY OPERATION_ID VARCHAR2(256)';
  END IF;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
END;
/

PROMPT  Expand CCE_ITEM_CATEGORY.ITEM_CAT_ICON_IMAGE_NAME to VARCHAR2(256)
DECLARE 
  l_data_length INTEGER;
BEGIN
  SELECT data_length
  INTO   l_data_length
  FROM   user_tab_columns
  WHERE  table_name = 'CCE_ITEM_CATEGORY'
  AND    column_name = 'ITEM_CAT_ICON_IMAGE_NAME';
  
  IF l_data_length < 256 THEN  
     EXECUTE IMMEDIATE 'ALTER TABLE CCE_ITEM_CATEGORY MODIFY ITEM_CAT_ICON_IMAGE_NAME VARCHAR2(256)';
  END IF;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
END;
/

PROMPT ALTER TABLE eams_media_format MODIFY hdcontent DEFAULT 'N';
ALTER TABLE eams_media_format MODIFY hdcontent DEFAULT 'N';

PROMPT Adding column CCE_RPT_FILTERS.RPT_FIELD_SEQ
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'CCE_RPT_FILTERS';
  l_column_name CONSTANT VARCHAR2(30) := 'RPT_FIELD_SEQ';  
  l_default_value VARCHAR2(30) := '1';
  l_column_datatype CONSTANT VARCHAR2(128) := 'NUMBER DEFAULT '||l_default_value;  
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_PUBLISH_PKG_APP_DATA.PROFILE_ID
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PKG_APP_DATA';
  l_column_name CONSTANT VARCHAR2(30) := 'PROFILE_ID';
  l_column_datatype CONSTANT VARCHAR2(30) := 'NUMBER';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_WORKFLOW_TRANS.REPROCESS
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_WORKFLOW_TRANS';
  l_column_name CONSTANT VARCHAR2(30) := 'REPROCESS';
  l_column_datatype CONSTANT VARCHAR2(30) := 'VARCHAR2(1)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_PUBLISH_ASSET.MEDIA_FORMAT_ID
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_ASSET';
  l_column_name CONSTANT VARCHAR2(30) := 'MEDIA_FORMAT_ID';
  l_column_datatype CONSTANT VARCHAR2(30) := 'NUMBER';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_PUBLISH_PACKAGE.TARGET_PLATFORM
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PACKAGE';
  l_column_name CONSTANT VARCHAR2(30) := 'TARGET_PLATFORM';
  l_column_datatype CONSTANT VARCHAR2(30) := 'VARCHAR2(100)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_WORKFLOW_TRANS.WORKFLOW_OP_ID
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_WORKFLOW_TRANS';
  l_column_name CONSTANT VARCHAR2(30) := 'WORKFLOW_OP_ID';
  l_column_datatype CONSTANT VARCHAR2(30) := 'NUMBER';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT  Expand EAMS_INGEST_PACKAGE.REF_ASSET_ID to VARCHAR2(256)
DECLARE 
  l_data_length INTEGER;
BEGIN
  SELECT data_length
  INTO   l_data_length
  FROM   user_tab_columns
  WHERE  table_name = 'EAMS_INGEST_PACKAGE'
  AND    column_name = 'REF_ASSET_ID';
  
  IF l_data_length < 256 THEN  
     EXECUTE IMMEDIATE 'ALTER TABLE EAMS_INGEST_PACKAGE MODIFY REF_ASSET_ID VARCHAR2(256)';
  END IF;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
END;
/

PROMPT  Expand EAMS_INGEST_ASSET.REF_ASSET_ID to VARCHAR2(256)
DECLARE 
  l_data_length INTEGER;
BEGIN
  SELECT data_length
  INTO   l_data_length
  FROM   user_tab_columns
  WHERE  table_name = 'EAMS_INGEST_ASSET'
  AND    column_name = 'REF_ASSET_ID';
  
  IF l_data_length < 256 THEN  
     EXECUTE IMMEDIATE 'ALTER TABLE EAMS_INGEST_ASSET MODIFY REF_ASSET_ID VARCHAR2(256)';
  END IF;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
END;
/

PROMPT  Expand EAMS_WI_ERROR_LOG.ERROR_STATUS to VARCHAR2(20)
DECLARE 
  l_data_length INTEGER;
BEGIN
  SELECT data_length
  INTO   l_data_length
  FROM   user_tab_columns
  WHERE  table_name = 'EAMS_WI_ERROR_LOG'
  AND    column_name = 'ERROR_STATUS';
  
  IF l_data_length < 20 THEN  
     EXECUTE IMMEDIATE 'ALTER TABLE EAMS_WI_ERROR_LOG MODIFY ERROR_STATUS VARCHAR2(20)';
  END IF;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
END;
/

PROMPT  Expand EAMS_WI_ERROR_LOG.ADAPT_ASSET_ID to VARCHAR2(100) FOR THE CR- LTUSR00047138
DECLARE 
  l_data_length INTEGER;
BEGIN
  SELECT data_length
  INTO   l_data_length
  FROM   user_tab_columns
  WHERE  table_name = 'EAMS_WI_ERROR_LOG'
  AND    column_name = 'ADAPT_ASSET_ID';
  
  IF l_data_length < 100 THEN  
     EXECUTE IMMEDIATE 'ALTER TABLE EAMS_WI_ERROR_LOG MODIFY ADAPT_ASSET_ID VARCHAR2(100)';
  END IF;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
END;
/

PROMPT Adding column EAMS_MEDIA_FORMAT.SOURCE_FORMAT
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_MEDIA_FORMAT';
  l_column_name CONSTANT VARCHAR2(30) := 'SOURCE_FORMAT';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(1) DEFAULT ''Y''';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_MEDIA_FORMAT.TARGET_FORMAT
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_MEDIA_FORMAT';
  l_column_name CONSTANT VARCHAR2(30) := 'TARGET_FORMAT';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(1) DEFAULT ''Y''';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_MEDIA_FORMAT.METADATA_REQUIRED
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_MEDIA_FORMAT';
  l_column_name CONSTANT VARCHAR2(30) := 'METADATA_REQUIRED';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(1) DEFAULT ''Y''';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column CCE_RPT_EXPORT_ASSOC.JRXML_FILE_NAME
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'CCE_RPT_EXPORT_ASSOC';
  l_column_name CONSTANT VARCHAR2(30) := 'JRXML_FILE_NAME';
  l_column_datatype CONSTANT VARCHAR2(30) := 'VARCHAR2(50)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column CCE_RPT_EXPORT_ASSOC.DISPLAY_OPT_ID
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'CCE_RPT_EXPORT_ASSOC';
  l_column_name CONSTANT VARCHAR2(30) := 'DISPLAY_OPT_ID';
  l_column_datatype CONSTANT VARCHAR2(80) := 'NUMBER(4) NOT NULL';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_RM_NE_LOAD_INFO.RESERVED_CAPACITY
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_RM_NE_LOAD_INFO';
  l_column_name CONSTANT VARCHAR2(30) := 'RESERVED_CAPACITY';
  l_column_datatype CONSTANT VARCHAR2(80) := 'NUMBER(20)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_CONFIG_REPOSITORY.RECORD_CREATE_TIME
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_CONFIG_REPOSITORY';
  l_column_name CONSTANT VARCHAR2(30) := 'RECORD_CREATE_TIME';
  l_column_datatype CONSTANT VARCHAR2(80) := 'NUMBER DEFAULT -1 NOT NULL';
  l_reset_default CONSTANT VARCHAR2(80) := 'NUMBER DEFAULT NULL';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' MODIFY '||l_column_name||' '||l_reset_default;
END;
/

PROMPT Adding column EAMS_CONFIG_REPOSITORY.USER_ID
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_CONFIG_REPOSITORY';
  l_column_name CONSTANT VARCHAR2(30) := 'USER_ID';
  l_column_datatype CONSTANT VARCHAR2(80) := 'NUMBER';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Make column EAMS_CONFIG_REPOSITORY.VENDOR_ID NULLABLE 
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_CONFIG_REPOSITORY';
  l_column_name CONSTANT VARCHAR2(30) := 'VENDOR_ID';
  l_column_datatype VARCHAR2(80) := 'NUMBER(10)';
  l_nullable CHAR(1); 
  l_data_length INTEGER;
  l_temp_table VARCHAR2(30);
  l_stmt VARCHAR2(2048);
  l_cnt_vendor_id INTEGER;
  l_cnt_vid_backup INTEGER;
BEGIN
  SELECT nullable,
         data_length
  INTO   l_nullable,
         l_data_length
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  IF l_nullable = 'N' THEN
     l_column_datatype := l_column_datatype||' NULL';
     l_stmt := 'ALTER TABLE '||l_table_name||' MODIFY '||l_column_name||' '||l_column_datatype;
     
     BEGIN     
       EXECUTE IMMEDIATE l_stmt;
       
       EXCEPTION
         WHEN OTHERS THEN 
              IF SQLCODE = -1440 AND l_data_length > 10 THEN
                 l_temp_table := 'tmp_vendor_id_'||TO_CHAR(SYSDATE, 'hh24miss');
                 
                 EXECUTE IMMEDIATE 'CREATE TABLE '||l_temp_table||' AS SELECT ROWID row_id, vendor_id FROM '||l_table_name||
                                   ' WHERE vendor_id IS NOT NULL';
                 
                 EXECUTE IMMEDIATE 'SELECT COUNT(*) FROM '||l_temp_table INTO l_cnt_vid_backup;
                 
                 SELECT COUNT(*)
                 INTO   l_cnt_vendor_id
                 FROM   eams_config_repository
                 WHERE  vendor_id IS NOT NULL;
                 
                 IF l_cnt_vid_backup = l_cnt_vendor_id THEN
                    EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' MODIFY '||l_column_name||' NUMBER NULL';
                    
                    UPDATE eams_config_repository
                    SET    vendor_id = NULL
                    WHERE  vendor_id IS NOT NULL;
                    
                    COMMIT;
                    
                    -- dbms_lock.sleep(30);
                    
                    EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' MODIFY '||l_column_name||' NUMBER(10)';
                    
                    EXECUTE IMMEDIATE 'UPDATE eams_config_repository a SET vendor_id = (SELECT b.vendor_id FROM '||l_temp_table||
                                      ' b WHERE a.ROWID = b.row_id) WHERE ROWID IN (SELECT row_id FROM '||l_temp_table||')';
                                      
                    COMMIT;
                    
                    SELECT COUNT(*)
                    INTO   l_cnt_vendor_id
                    FROM   eams_config_repository
                    WHERE  vendor_id IS NOT NULL;
                    
                    IF l_cnt_vid_backup = l_cnt_vendor_id THEN
                       EXECUTE IMMEDIATE 'DROP TABLE '||l_temp_table;
                    ELSE
                       raise_application_error(-20000, 'Cannot drop temporary table '||l_temp_table||CHR(10)||
                                                       'l_cnt_vid_backup='||l_cnt_vid_backup||' but l_cnt_vendor_id='||l_cnt_vendor_id);
                    END IF;
                 ELSE
                    raise_application_error(-20000, 'l_cnt_vid_backup='||l_cnt_vid_backup||' but l_cnt_vendor_id='||l_cnt_vendor_id);
                 END IF;
              ELSE
                 RAISE; 
              END IF;
     END;
  END IF;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_CONFIG_REPOSITORY.LAST_MODIFY_TIME
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_CONFIG_REPOSITORY';
  l_column_name CONSTANT VARCHAR2(30) := 'LAST_MODIFY_TIME';
  l_column_datatype CONSTANT VARCHAR2(80) := 'NUMBER';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_CONFIG_REPOSITORY.SOURCE
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_CONFIG_REPOSITORY';
  l_column_name CONSTANT VARCHAR2(30) := 'SOURCE';
  l_column_datatype CONSTANT VARCHAR2(80) := 'NUMBER';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT  Expand EAMS_INGEST_PKG_APP_DATA.APP_DATA_VALUE to VARCHAR2(4000)
DECLARE 
  l_data_length_to_be CONSTANT INTEGER := 4000;
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_INGEST_PKG_APP_DATA';
  l_column_name CONSTANT VARCHAR2(30) := 'APP_DATA_VALUE';
    
  l_data_length INTEGER;
BEGIN
  SELECT data_length
  INTO   l_data_length
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  IF l_data_length < l_data_length_to_be THEN  
     EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' MODIFY '||l_column_name||' VARCHAR2('||l_data_length_to_be||')';
  END IF;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
END;
/

PROMPT  Expand EAMS_PUBLISH_PKG_APP_DATA.APP_DATA_VALUE to VARCHAR2(4000)
DECLARE 
  l_data_length_to_be CONSTANT INTEGER := 4000;
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PKG_APP_DATA';
  l_column_name CONSTANT VARCHAR2(30) := 'APP_DATA_VALUE';
    
  l_data_length INTEGER;
BEGIN
  SELECT data_length
  INTO   l_data_length
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  IF l_data_length < l_data_length_to_be THEN  
     EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' MODIFY '||l_column_name||' VARCHAR2('||l_data_length_to_be||')';
  END IF;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
END;
/

PROMPT Adding column EAMS_INGEST_ASSET.CC_TYPE
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_INGEST_ASSET';
  l_column_name CONSTANT VARCHAR2(30) := 'CC_TYPE';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(20)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Expand multiple columns to VARCHAR2(4000)
DECLARE
  TYPE obj_varchar_tab IS TABLE OF VARCHAR2(128);
    
  l_tables obj_varchar_tab := obj_varchar_tab('EAMS_INGEST_PACKAGE',
                                              'EAMS_INGEST_PACKAGE',                                              
                                              'CCE_ITEM_CATEGORY',
                                              'EAMS_INGEST_ASSET',
                                              'EAMS_INGEST_ASSET',
                                              'EAMS_ADAPT_ASSET',
                                              'EAMS_ADAPT_ASSET',
                                              'EAMS_QA_ASSET',
                                              'EAMS_QA_ASSET',
                                              'EAMS_PUBLISH_ASSET',
                                              'EAMS_PUBLISH_PACKAGE',
                                              'EAMS_PUBLISH_PACKAGE',
                                              'EAMS_WI_ERROR_LOG');
                                              
  l_columns obj_varchar_tab := obj_varchar_tab('INGEST_LOCATION',
                                               'OPERATION_ID',                                              
                                               'ITEM_CATEGORY_NAME',
                                               'ASSET_NAME',
                                               'ASSET_LOCATION',
                                               'ASSET_LOCATION',
                                               'ADAPT_LOCATION',
                                               'ASSET_LOCATION',
                                               'ASSET_NAME',
                                               'PUBLISH_LOCATION',
                                               'PUBLISH_LOCATION',
                                               'OPERATION_ID',
                                               'LOG_LOCATION');                                              

  l_data_types obj_varchar_tab := obj_varchar_tab(' VARCHAR2(4000)',
                                                  ' VARCHAR2(4000)',                                              
                                                  ' VARCHAR2(4000)',
                                                  ' VARCHAR2(4000)',
                                                  ' VARCHAR2(4000)',
                                                  ' VARCHAR2(4000)',
                                                  ' VARCHAR2(4000)',
                                                  ' VARCHAR2(4000)',
                                                  ' VARCHAR2(4000)',
                                                  ' VARCHAR2(4000)',
                                                  ' VARCHAR2(4000)',
                                                  ' VARCHAR2(4000)',
                                                  ' VARCHAR2(4000)');                                                           
                                              
  l_data_lengths obj_varchar_tab := obj_varchar_tab('4000',
                                                    '4000',                                              
                                                    '4000',
                                                    '4000',
                                                    '4000',
                                                    '4000',
                                                    '4000',
                                                    '4000',
                                                    '4000',
                                                    '4000',
                                                    '4000',
                                                    '4000',
                                                    '4000');   
                                                   
  l_data_length INTEGER;                                              
BEGIN
  FOR i IN 1..l_tables.COUNT LOOP
      BEGIN      
        SELECT data_length
        INTO   l_data_length
        FROM   user_tab_columns
        WHERE  table_name = l_tables(i)
        AND    column_name = l_columns(i);
        
        dbms_output.put_line('ALTER TABLE '||l_tables(i)||' MODIFY '||l_columns(i)||l_data_types(i));
        
        IF l_data_length < l_data_lengths(i) THEN  
           EXECUTE IMMEDIATE 'ALTER TABLE '||l_tables(i)||' MODIFY '||l_columns(i)||l_data_types(i);
        END IF;
        
        EXCEPTION
          WHEN NO_DATA_FOUND THEN NULL;       
      END;      
  END LOOP i;                       
END;
/

PROMPT Adding column EAMS_PUBLISH_PACKAGE.PRODUCTION_STATE
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PACKAGE';
  l_column_name CONSTANT VARCHAR2(30) := 'PRODUCTION_STATE';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(30)';
  l_dummy INTEGER;  
  l_sql VARCHAR2(1024) := 'UPDATE eams_publish_package '||CHR(10)||
                          'SET    production_state = CASE status '||CHR(10)||
                          '                          WHEN ''PUBLISHED'' THEN ''UNKNOWN'' '||CHR(10)||
                          '                          WHEN ''MANUAL_EDIT'' THEN ''IN_PROGRESS'' '||CHR(10)||
                          '                          WHEN ''ERROR'' THEN ''IN_PROGRESS'' '||CHR(10)||
                          '                          WHEN ''PUBLISH_PENDING'' THEN ''IN_PROGRESS'' '||CHR(10)||
                          '                          WHEN ''PUBLISH_PROGRESS'' THEN ''IN_PROGRESS'' '||CHR(10)||
                          '                          WHEN ''TRANSFORM_COMPLETE'' THEN ''IN_PROGRESS'' '||CHR(10)||
                          '                          WHEN ''TRANSFORM_PROGRESS'' THEN ''IN_PROGRESS'' '||CHR(10)||
                          '                          WHEN ''REJECTED'' THEN ''TERMINATED'' '||CHR(10)||
                          '                          WHEN ''INACTIVE'' THEN ''NOT_IN_PRODUCTION'' '||CHR(10)||
                          '                          WHEN ''DELETED'' THEN ''NOT_IN_PRODUCTION'' '||CHR(10)||
                          '                          END'||CHR(10)||
                          'WHERE  production_state IS NULL';
BEGIN
  BEGIN 
    SELECT 1     
    INTO   l_dummy
    FROM   user_tab_columns
    WHERE  table_name = l_table_name
    AND    column_name = l_column_name;
    
        
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
           EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
  END;
  
  EXECUTE IMMEDIATE l_sql;                                   
  COMMIT;         
  
  BEGIN 
    EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' MODIFY '||l_column_name||' '||l_column_datatype||' NOT NULL';
    
    EXCEPTION
      WHEN OTHERS THEN
           IF SQLCODE != -1442 THEN
              RAISE;
           END IF;
  END;  
END;
/

DECLARE
  l_time NUMBER;
BEGIN
  l_time := cce_util#pkg.datetoms(SYSDATE);

  EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

PROMPT Adding column EAMS_PUBLISH_PACKAGE.PROD_STATE_CHG_TIME
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PACKAGE';
  l_column_name CONSTANT VARCHAR2(30) := 'PROD_STATE_CHG_TIME';
  l_column_datatype CONSTANT VARCHAR2(80) := 'NUMBER';
  l_dummy INTEGER;  
  l_time NUMBER := cce_util#pkg.datetoms(SYSDATE);
  l_sql VARCHAR2(1024) := 'UPDATE eams_publish_package '||CHR(10)||
                          'SET    prod_state_chg_time = :in_prod_state_chg_time '||CHR(10)||
                          'WHERE  prod_state_chg_time IS NULL';
BEGIN
  BEGIN
    SELECT 1     
    INTO   l_dummy
    FROM   user_tab_columns
    WHERE  table_name = l_table_name
    AND    column_name = l_column_name;
         
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
           EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
  END;
  
  EXECUTE IMMEDIATE l_sql USING l_time;                                
  COMMIT;               
END;
/

PROMPT Adding column EAMS_PUBLISH_PACKAGE.PROD_STATE_CHG_USER_ID
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PACKAGE';
  l_column_name CONSTANT VARCHAR2(30) := 'PROD_STATE_CHG_USER_ID';
  l_column_datatype CONSTANT VARCHAR2(80) := 'NUMBER';
  l_dummy INTEGER;    
  l_sql VARCHAR2(1024) := 'UPDATE eams_publish_package '||CHR(10)||
                          'SET    prod_state_chg_user_id = :in_prod_state_chg_user_id '||CHR(10)||
                          'WHERE  prod_state_chg_user_id IS NULL';
BEGIN
  BEGIN  
    SELECT 1     
    INTO   l_dummy
    FROM   user_tab_columns
    WHERE  table_name = l_table_name
    AND    column_name = l_column_name;
         
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
           EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
  END;

  EXECUTE IMMEDIATE l_sql USING 1;                                
  COMMIT;                        
END;
/

PROMPT Adding column EAMS_PUBLISH_PACKAGE.PROD_STATE_CHG_REMARKS
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PACKAGE';
  l_column_name CONSTANT VARCHAR2(30) := 'PROD_STATE_CHG_REMARKS';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(300)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_PUBLISH_PACKAGE.SUB_STATUS_CODE
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PACKAGE';
  l_column_name CONSTANT VARCHAR2(30) := 'SUB_STATUS_CODE';
  l_column_datatype CONSTANT VARCHAR2(80) := 'NUMBER(10)';
  l_dummy INTEGER;
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

prompt ALTER EAMS_RM_NE_LOAD_INFO MODIFY NE_ID from NUMBER(3) to NUMBER
ALTER TABLE EAMS_RM_NE_LOAD_INFO MODIFY (NE_ID NUMBER);

prompt ALTER EAMS_RM_NE_LOAD_INFO MODIFY AVAILABLE_CAPACITY from NUMBER(2) to NUMBER(20)
ALTER TABLE EAMS_RM_NE_LOAD_INFO MODIFY (AVAILABLE_CAPACITY NUMBER(20)); 
 
prompt ALTER EAMS_RM_NE_LOAD_INFO MODIFY THRESH_HOLD from NUMBER(2) to NUMBER(20)
ALTER TABLE EAMS_RM_NE_LOAD_INFO MODIFY (THRESH_HOLD NUMBER(20));

PROMPT  Expand CCE_FIELD_INFO.FIELD_XML_TAG to VARCHAR2(200)
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'CCE_FIELD_INFO';
  l_column_name CONSTANT VARCHAR2(30) := 'FIELD_XML_TAG';
  l_data_length INTEGER;
  l_length CONSTANT INTEGER := 200;
BEGIN
  SELECT data_length
  INTO   l_data_length
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  IF l_data_length < l_length THEN  
     EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' MODIFY '||l_column_name||' VARCHAR2('||l_length||')';
  END IF;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
END;
/

PROMPT  Expand EAMS_WORKFLOW.WORKFLOW_NAME to VARCHAR2(50)
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_WORKFLOW';
  l_column_name CONSTANT VARCHAR2(30) := 'WORKFLOW_NAME';
  l_data_length INTEGER;
  l_length CONSTANT INTEGER := 50;
BEGIN
  SELECT data_length
  INTO   l_data_length
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  IF l_data_length < l_length THEN  
     EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' MODIFY '||l_column_name||' VARCHAR2('||l_length||')';
  END IF;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
END;
/

PROMPT Adding column EAMS_INGEST_ASSET.CC_REQUIRED
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_INGEST_ASSET';
  l_column_name CONSTANT VARCHAR2(30) := 'CC_REQUIRED';
  l_column_datatype CONSTANT VARCHAR2(30) := 'VARCHAR2(1)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_INGEST_ASSET.CC_EVAL_CRITERIA
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_INGEST_ASSET';
  l_column_name CONSTANT VARCHAR2(30) := 'CC_EVAL_CRITERIA';
  l_column_datatype CONSTANT VARCHAR2(30) := 'VARCHAR2(200)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_QA_ASSET.MEDIA_CONTEXT
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_QA_ASSET';
  l_column_name CONSTANT VARCHAR2(30) := 'MEDIA_CONTEXT';
  l_column_datatype CONSTANT VARCHAR2(30) := 'XMLTYPE';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT  Expand EAMS_ADAPT_ASSET.ENCRYPTION_SEED to VARCHAR2(4000)
DECLARE 
  l_data_length_to_be CONSTANT INTEGER := 4000;
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_ADAPT_ASSET';
  l_column_name CONSTANT VARCHAR2(30) := 'ENCRYPTION_SEED';
    
  l_data_length INTEGER;
BEGIN
  SELECT data_length
  INTO   l_data_length
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  IF l_data_length < l_data_length_to_be THEN  
     EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' MODIFY '||l_column_name||' VARCHAR2('||l_data_length_to_be||')';
  END IF;
  
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
END;
/

PROMPT Tablespace Migration
DECLARE  
  TYPE obj_varchar_tab IS TABLE OF VARCHAR2(30);
  
  l_data_tablespace CONSTANT VARCHAR2(30) := 'EAMS_MOT_128M_DAT';
  l_index_tablespace CONSTANT VARCHAR2(30) := 'EAMS_MOT_8M_IDX';
  
  l_tablespace_name VARCHAR2(30);
  l_idx_ts_clause VARCHAR2(80);
  
  l_dummy INTEGER;
  l_stmt VARCHAR2(1024);
  
  l_tables obj_varchar_tab := obj_varchar_tab('EAMS_PUBLISH_PACKAGE',
                                              'EAMS_WI_ERROR_LOG',                                              
                                              'EAMS_ADAPT_ASSET',
                                              'EAMS_PUBLISH_ASSET',
                                              'EAMS_INGEST_PACKAGE',
                                              'EAMS_INGEST_ASSET',
                                              'EAMS_WORKFLOW_TRANS',
                                              'EAMS_INGEST_PKG_APP_DATA',
                                              'EAMS_PUBLISH_PKG_APP_DATA',
                                              'EAMS_ENCR_AGENT_TRANS',
                                              'EAMS_ENCODE_AGENT_TRANS');
BEGIN
  SELECT 1
  INTO   l_dummy
  FROM   dba_tablespaces a
  WHERE  tablespace_name = l_data_tablespace;
  
  FOR i IN 1..l_tables.COUNT LOOP
      BEGIN 
        SELECT tablespace_name
        INTO   l_tablespace_name
        FROM   user_tables
        WHERE  table_name = l_tables(i);
        
        IF l_tablespace_name != l_data_tablespace THEN
           l_stmt := 'ALTER TABLE '||l_tables(i)||' MOVE TABLESPACE '||l_data_tablespace;
           
           EXECUTE IMMEDIATE l_stmt;    
        END IF;
        
        EXCEPTION
          WHEN NO_DATA_FOUND THEN NULL;
      END;      
  END LOOP rec;
  
  -- Move the xmltype lob segments  
  FOR rec IN (SELECT b.tablespace_name,
                     a.table_name,
                     a.column_name
              FROM   user_tab_columns a,
                     user_lobs b       
              WHERE  data_type = 'XMLTYPE'
              AND    a.table_name = b.table_name
              AND    'SYS_NC000'||(a.column_id + 1)||'$' = b.column_name
              AND    b.tablespace_name != l_data_tablespace) LOOP              
      l_stmt := 'ALTER TABLE '||rec.table_name||' MOVE LOB('||rec.column_name||'.xmldata) STORE AS (TABLESPACE '||l_data_tablespace||')';
      
      EXECUTE IMMEDIATE l_stmt;
  END LOOP rec;
  
  BEGIN
    SELECT 1
    INTO   l_dummy
    FROM   dba_tablespaces a
    WHERE  tablespace_name = l_index_tablespace;
    
    l_idx_ts_clause := 'TABLESPACE '||l_index_tablespace;
    
    FOR rec IN (SELECT index_name
                FROM   user_indexes
                WHERE  table_name IN ('EAMS_PUBLISH_PACKAGE',
                                      'EAMS_WI_ERROR_LOG',                                              
                                      'EAMS_ADAPT_ASSET',
                                      'EAMS_PUBLISH_ASSET',
                                      'EAMS_INGEST_PACKAGE',
                                      'EAMS_INGEST_ASSET',
                                      'EAMS_WORKFLOW_TRANS',
                                      'EAMS_INGEST_PKG_APP_DATA',
                                      'EAMS_PUBLISH_PKG_APP_DATA',
                                      'EAMS_ENCR_AGENT_TRANS',
                                      'EAMS_ENCODE_AGENT_TRANS')
                AND    tablespace_name != l_index_tablespace
                AND    index_type != 'LOB') LOOP
                
        l_stmt := 'ALTER INDEX '||rec.index_name||' REBUILD '||l_idx_ts_clause;
        
        EXECUTE IMMEDIATE l_stmt;      
                
    END LOOP rec;                    
    
    EXCEPTION 
      WHEN NO_DATA_FOUND THEN
           l_idx_ts_clause := NULL;
  END;
  
  FOR rec IN (SELECT index_name
              FROM   user_indexes
              WHERE  status = 'UNUSABLE') LOOP
              
      l_stmt := 'ALTER INDEX '||rec.index_name||' REBUILD '||l_idx_ts_clause;
      
      EXECUTE IMMEDIATE l_stmt;      
  END LOOP rec;
  
  EXCEPTION 
    WHEN NO_DATA_FOUND THEN 
         raise_application_error (-20000, 'Tablespace '||l_data_tablespace||' does not exist, TS migration abort.');             
END;
/                                              

PROMPT Adding column EAMS_INGEST_PACKAGE.PACKAGE_PRIORITY
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_INGEST_PACKAGE';
  l_column_name CONSTANT VARCHAR2(30) := 'PACKAGE_PRIORITY';
  l_column_datatype CONSTANT VARCHAR2(80) := 'NUMBER(10)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_PUBLISH_PACKAGE.PACKAGE_PRIORITY
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_PUBLISH_PACKAGE';
  l_column_name CONSTANT VARCHAR2(30) := 'PACKAGE_PRIORITY';
  l_column_datatype CONSTANT VARCHAR2(80) := 'NUMBER(10)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_INGEST_ASSET.ASSET_FILE_SIZE
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_INGEST_ASSET';
  l_column_name CONSTANT VARCHAR2(30) := 'ASSET_FILE_SIZE';
  l_column_datatype CONSTANT VARCHAR2(80) := 'NUMBER';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_INGEST_ASSET.ASSET_CHECKSUM
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_INGEST_ASSET';
  l_column_name CONSTANT VARCHAR2(30) := 'ASSET_CHECKSUM';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(1000)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_INFLIGHT_PACKAGE.PROVIDER_ID
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_INFLIGHT_PACKAGE';
  l_column_name CONSTANT VARCHAR2(30) := 'PROVIDER_ID';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(50)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_INFLIGHT_PLATFORM_ASSOC.PROVIDER_ID
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_INFLIGHT_PLATFORM_ASSOC';
  l_column_name CONSTANT VARCHAR2(30) := 'PROVIDER_ID';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(50)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_RESOURCE_ROLE.PROVIDER_ID
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_RESOURCE_ROLE';
  l_column_name CONSTANT VARCHAR2(30) := 'ROLE_DISP_NAME';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(100) NOT NULL';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Make EAMS_WORKSTEP_TRANS.OUTBOUND_RESOURCE_MAP_ID NULLABLE
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_WORKSTEP_TRANS';
  l_column_name CONSTANT VARCHAR2(30) := 'OUTBOUND_RESOURCE_MAP_ID';
  l_column_datatype VARCHAR2(80) := 'NUMBER';
  l_nullable CHAR(1); 
  l_data_length INTEGER;
  l_temp_table VARCHAR2(30);
  l_stmt VARCHAR2(2048);
  l_cnt_vendor_id INTEGER;
  l_cnt_vid_backup INTEGER;
BEGIN
  SELECT nullable,
         data_length
  INTO   l_nullable,
         l_data_length
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  IF l_nullable = 'N' THEN
     l_column_datatype := l_column_datatype||' NULL';
     l_stmt := 'ALTER TABLE '||l_table_name||' MODIFY '||l_column_name||' '||l_column_datatype;
     
     BEGIN     
       EXECUTE IMMEDIATE l_stmt;
     END;
  END IF;
END;
/

PROMPT Adding column EAMS_RESOURCE.RESOURCE_PROVIDER_ID
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_RESOURCE';
  l_column_name CONSTANT VARCHAR2(30) := 'RESOURCE_PROVIDER_ID';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(256)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Adding column EAMS_RESOURCE.RESOURCE_PROVIDER_NAME
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_RESOURCE';
  l_column_name CONSTANT VARCHAR2(30) := 'RESOURCE_PROVIDER_NAME';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(256)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Make EAMS_WF_RESOURCE_MAP_ASSOC.NEW_WORKFLOW_OP_ID NULLABLE
DECLARE 
  idx INTEGER := 1;
  
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_WF_RESOURCE_MAP_ASSOC';
  l_column_name CONSTANT VARCHAR2(30) := 'NEW_WORKFLOW_OP_ID';
  l_column_datatype VARCHAR2(80) := 'NUMBER';
  l_nullable CHAR(1); 
  l_data_length INTEGER;
  l_temp_table VARCHAR2(30);
  l_stmt VARCHAR2(2048);
  l_cnt_vendor_id INTEGER;
  l_cnt_vid_backup INTEGER;
  
  PROCEDURE drop_con_and_make_null IS
  
  BEGIN
    FOR rec IN (SELECT b.*
                FROM   user_cons_columns a,
                       user_constraints b    
                WHERE  a.table_name = l_table_name
                AND    column_name = l_column_name
                AND    a.constraint_name = b.constraint_name
                AND    b.constraint_type = 'P') LOOP
                                                  
        EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' DROP CONSTRAINT '||rec.constraint_name;                           
    END LOOP rec;
                 
    EXECUTE IMMEDIATE l_stmt;      
  END drop_con_and_make_null;
  
  PROCEDURE execute_it IS
  
  BEGIN
    SELECT nullable,
           data_length
    INTO   l_nullable,
           l_data_length
    FROM   user_tab_columns
    WHERE  table_name = l_table_name
    AND    column_name = l_column_name;
    
    IF l_nullable = 'N' THEN
       l_column_datatype := l_column_datatype||' NULL';
       l_stmt := 'ALTER TABLE '||l_table_name||' MODIFY '||l_column_name||' '||l_column_datatype;
       
       BEGIN     
         EXECUTE IMMEDIATE l_stmt;
         
         EXCEPTION
           WHEN OTHERS THEN               
                IF SQLCODE = -1451 THEN                 
                   drop_con_and_make_null;
                ELSE
                   RAISE;
                END IF;
       END;
    END IF;  
  END execute_it;
    
  PROCEDURE execute_it2 IS
    
  BEGIN
    execute_it;
         
    EXCEPTION
      WHEN OTHERS THEN               
           IF SQLCODE = -1451 AND idx <= 10 THEN
              idx := idx + 1;                
              execute_it2;
           ELSE
              RAISE;
           END IF;
  END execute_it2;  
  
BEGIN
  execute_it2;
END;
/

PROMPT Adding column EAMS_RESOURCE.WORKSTEP_TYPE
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_WORKSTEP_ROLE_ASSOC';
  l_column_name CONSTANT VARCHAR2(30) := 'WORKSTEP_TYPE';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(50) DEFAULT ''SINGLE-RESOURCE'' ';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
         EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' ADD '||l_column_name||' '||l_column_datatype;
END;
/

PROMPT Dropping column EAMS_RESOURCE.WORKSTEP_TYPE
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_WORKSTEP_ROLE_ASSOC';
  l_column_name CONSTANT VARCHAR2(30) := 'RESOURCE_POOL';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
  
  EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' DROP COLUMN '||l_column_name;
       
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;         
END;
/

PROMPT Renaming column EAMS_WORKSTEP_TRANS_INFO.FIELD_ID TO FIELD_NAME 
DECLARE 
  l_table_name CONSTANT VARCHAR2(30) := 'EAMS_WORKSTEP_TRANS_INFO';
  l_column_name CONSTANT VARCHAR2(30) := 'FIELD_ID';
  l_new_column_name CONSTANT VARCHAR2(30) := 'FIELD_NAME';
  l_column_datatype CONSTANT VARCHAR2(80) := 'VARCHAR2(500)';
  l_dummy INTEGER;  
BEGIN
  SELECT 1     
  INTO   l_dummy
  FROM   user_tab_columns
  WHERE  table_name = l_table_name
  AND    column_name = l_column_name;
       
  EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' RENAME COLUMN '||l_column_name||' TO '||l_new_column_name;
  EXECUTE IMMEDIATE 'ALTER TABLE '||l_table_name||' MODIFY '||l_new_column_name||' '||l_column_datatype;
    
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
         
END;
/
