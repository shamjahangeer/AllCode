CREATE OR REPLACE PROCEDURE CCE_UTILITY_PRC(P_RENAME NUMBER,P_DROP NUMBER,P_OWNER VARCHAR2) AS 
CURSOR CCE_UTILITY_CUR(P_OWNER_NAME VARCHAR2) IS SELECT DISTINCT SUBSTR(TNAME,1, LENGTH(TNAME)-1) 
							FROM ALL_OBJECTS AB,EXT_TABLE_CSV ETC
							WHERE OBJECT_TYPE='TABLE'
							AND SUBSTR(TNAME,1, LENGTH(TNAME)-1)=AB.OBJECT_NAME
							AND OWNER=P_OWNER_NAME;
CURSOR CCE_DEPEND_CUR(P_REFERENCED_NAME VARCHAR2,P_OWNER_NAME VARCHAR2) IS  
							SELECT REFERENCED_NAME,NAME,TYPE
							FROM SYS.DBA_DEPENDENCIES
							WHERE REFERENCED_TYPE = 'TABLE'
							AND REFERENCED_NAME=P_REFERENCED_NAME
							AND OWNER=P_OWNER_NAME;
CURSOR CCE_UTILITY_TEMP_CUR(P_DEPENDENT_NAME VARCHAR2) IS
							SELECT COUNT(*) FROM CCE_UTILITY_TEMP
                            WHERE DEPENDENT_NAME=P_DEPENDENT_NAME;
						
V_STR VARCHAR2(100);
V_STR_1 VARCHAR2(100);
V_STR_2 VARCHAR2(100);
V_DEPEND CCE_DEPEND_CUR%ROWTYPE;
V_COUNT NUMBER;
BEGIN
	IF P_RENAME = 1 and P_DROP =0 THEN

	OPEN CCE_UTILITY_CUR(P_OWNER);
		LOOP
			EXIT WHEN CCE_UTILITY_CUR% NOTFOUND;
			FETCH CCE_UTILITY_CUR INTO V_STR;
		    V_STR_2 := SUBSTR(V_STR,5);
			--V_STR_1 := 'ALTER TABLE '||V_STR||' RENAME TO '||'DEL_'||V_STR_2;
			V_STR_1 := 'ALTER TABLE '||'DEL_'||V_STR_2||' RENAME TO '||V_STR;
			-- V_STR_1 := 'ALTER TABLE DEL_'||V_STR_2||' RENAME TO '||V_STR
		   -- V_STR_1 := 'ALTER TABLE DEL_'||V_STR||' RENAME TO '||V_STR;
			DBMS_OUTPUT.PUT_LINE('Prompt Rename Table For '||V_STR);
			DBMS_OUTPUT.PUT_LINE(V_STR_1);
			DBMS_OUTPUT.PUT_LINE('/');
		END LOOP;
		CLOSE CCE_UTILITY_CUR;
		DBMS_OUTPUT.PUT_LINE('==================================================================');
		DBMS_OUTPUT.PUT_LINE('TABLE DEPENDENCIES');
		DBMS_OUTPUT.PUT_LINE('==================================================================');
		
		OPEN CCE_UTILITY_CUR(P_OWNER);
		LOOP
		EXIT WHEN CCE_UTILITY_CUR% NOTFOUND;
			FETCH CCE_UTILITY_CUR INTO V_STR;
			OPEN CCE_DEPEND_CUR(V_STR,P_OWNER);
			LOOP
				EXIT WHEN CCE_DEPEND_CUR% NOTFOUND;
				FETCH CCE_DEPEND_CUR INTO V_DEPEND;
				IF CCE_DEPEND_CUR%FOUND THEN
					--DBMS_OUTPUT.PUT_LINE('Table Name:'||V_STR);
					DBMS_OUTPUT.PUT_LINE('================================================');
					DBMS_OUTPUT.PUT_LINE('Table Name: '||V_STR||', Dependent Object: '||V_DEPEND.NAME||',Type: '||V_DEPEND.TYPE);
					DBMS_OUTPUT.PUT_LINE('================================================');
				END IF;
			END LOOP;
			CLOSE CCE_DEPEND_CUR;
		END LOOP;
	   CLOSE CCE_UTILITY_CUR;
	END IF;

	IF P_RENAME = 0 and P_DROP =1  THEN
		OPEN CCE_UTILITY_CUR(P_OWNER);
		LOOP
			EXIT WHEN CCE_UTILITY_CUR% NOTFOUND;
			FETCH CCE_UTILITY_CUR INTO V_STR;
			V_STR_1 := 'DROP TABLE '||V_STR||' CASCADE CONSTRAINTS';
			DBMS_OUTPUT.PUT_LINE('Prompt Drop Table '||V_STR);
			DBMS_OUTPUT.PUT_LINE(V_STR_1);
			DBMS_OUTPUT.PUT_LINE('/');
		END LOOP;
		CLOSE CCE_UTILITY_CUR;
		DBMS_OUTPUT.PUT_LINE('--==================================================================');
		DBMS_OUTPUT.PUT_LINE('--TABLE DEPENDENCIES');
		DBMS_OUTPUT.PUT_LINE('--==================================================================');
		
		OPEN CCE_UTILITY_CUR(P_OWNER);
		LOOP
		EXIT WHEN CCE_UTILITY_CUR% NOTFOUND;
			FETCH CCE_UTILITY_CUR INTO V_STR;
			OPEN CCE_DEPEND_CUR(V_STR,P_OWNER);
			LOOP
				EXIT WHEN CCE_DEPEND_CUR% NOTFOUND;
				FETCH CCE_DEPEND_CUR INTO V_DEPEND;
				IF CCE_DEPEND_CUR%FOUND THEN
					--DBMS_OUTPUT.PUT_LINE('Table Name:'||V_STR);
					--DBMS_OUTPUT.PUT_LINE('Dependent Object: '||V_DEPEND.NAME||' Type :'||V_DEPEND.TYPE);
					
					INSERT INTO CCE_UTILITY_TEMP VALUES(V_DEPEND.NAME);
					OPEN CCE_UTILITY_TEMP_CUR(V_DEPEND.NAME);
					FETCH CCE_UTILITY_TEMP_CUR INTO V_COUNT;
					CLOSE CCE_UTILITY_TEMP_CUR;
					
					IF V_DEPEND.TYPE <> 'PACKAGE BODY' AND V_COUNT =1 THEN
						DBMS_OUTPUT.PUT_LINE('Prompt Table Name: '||V_STR||', Dependent Object: '||V_DEPEND.NAME||',Type: '||V_DEPEND.TYPE);
					END IF;
					
					IF V_DEPEND.TYPE='TRIGGER' AND V_COUNT = 1 THEN
					   -- DBMS_OUTPUT.PUT_LINE('PROMPT DROP TRIGGER STATEMENT');
						DBMS_OUTPUT.PUT_LINE('DROP TRIGGER '||V_DEPEND.NAME);
						DBMS_OUTPUT.PUT_LINE('/');
					ELSIF V_DEPEND.TYPE='VIEW' AND V_COUNT = 1 THEN
						--DBMS_OUTPUT.PUT_LINE('PROMPT DROP VIEW STATEMENT');
						DBMS_OUTPUT.PUT_LINE('DROP VIEW '||V_DEPEND.NAME);
						DBMS_OUTPUT.PUT_LINE('/');
					ELSIF V_DEPEND.TYPE='SEQUENCE' AND V_COUNT = 1 THEN
						--DBMS_OUTPUT.PUT_LINE('PROMPT DROP SEQUENCE STATEMENT');
						DBMS_OUTPUT.PUT_LINE('DROP SEQUENCE '||V_DEPEND.NAME);
						DBMS_OUTPUT.PUT_LINE('/');
					ELSIF V_DEPEND.TYPE='SYNONYM' AND V_COUNT = 1 THEN
						--DBMS_OUTPUT.PUT_LINE('PROMPT DROP SYNONYM STATEMENT');
						DBMS_OUTPUT.PUT_LINE('DROP SYNONYM '||V_DEPEND.NAME);
						DBMS_OUTPUT.PUT_LINE('/');
					ELSIF V_DEPEND.TYPE='PROCEDURE' AND V_COUNT = 1 THEN
						--DBMS_OUTPUT.PUT_LINE('PROMPT DROP PROCEDURE STATEMENT');
						DBMS_OUTPUT.PUT_LINE('DROP PROCEDURE '||V_DEPEND.NAME);
						DBMS_OUTPUT.PUT_LINE('/');
					ELSIF V_DEPEND.TYPE='FUNCTION' AND V_COUNT = 1 THEN
						--DBMS_OUTPUT.PUT_LINE('PROMPT DROP PROCEDURE STATEMENT');
						DBMS_OUTPUT.PUT_LINE('DROP FUNCTION '||V_DEPEND.NAME);
						DBMS_OUTPUT.PUT_LINE('/');
					ELSIF V_DEPEND.TYPE='PACKAGE' AND V_COUNT = 1 THEN
						--DBMS_OUTPUT.PUT_LINE('PROMPT DROP PROCEDURE STATEMENT');
						DBMS_OUTPUT.PUT_LINE('DROP PACKAGE '||V_DEPEND.NAME);
						DBMS_OUTPUT.PUT_LINE('/');
					END IF;
				END IF;
			END LOOP;
			CLOSE CCE_DEPEND_CUR;
		END LOOP;
	   CLOSE CCE_UTILITY_CUR;
 END IF;
COMMIT; 
END CCE_UTILITY_PRC;
/