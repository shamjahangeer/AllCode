CREATE OR REPLACE PROCEDURE p_write_error(vic_org_key_id IN LOAD_MSG.ORGANIZATION_KEY_ID%TYPE,
                                          vic_amp_order_nbr IN LOAD_MSG.AMP_ORDER_NBR%TYPE,
                                          vic_order_item_nbr IN LOAD_MSG.ORDER_ITEM_NBR%TYPE,
                                          vic_shipment_id IN LOAD_MSG.SHIPMENT_ID%TYPE,
                                          vid_database_load_date IN LOAD_MSG.DATABASE_LOAD_DATE%TYPE,
                                          vid_amp_shipped_date IN LOAD_MSG.AMP_SHIPPED_DATE%TYPE,
                                          vid_amp_schedule_date IN LOAD_MSG.AMP_SCHEDULE_DATE%TYPE,
                                          vin_part_key_id IN LOAD_MSG.PART_KEY_ID%TYPE,
                                          vic_status IN LOAD_MSG.STATUS%TYPE,
                                          vic_update_code IN CHAR,
                                          vic_userid IN LOAD_MSG.DML_ORACLE_ID%TYPE,
                                          vin_sqlcode IN NUMBER,
                                          vic_sqlerr IN CHAR) IS
BEGIN
  INSERT
  INTO LOAD_MSG
    (LOAD_MSG_SEQ,
     DML_ORACLE_ID,
     DML_TMSTMP,
     AMP_ORDER_NBR,
     ORDER_ITEM_NBR,
     SHIPMENT_ID,
     DATABASE_LOAD_DATE,
     AMP_SHIPPED_DATE,
     AMP_SCHEDULE_DATE,
     PART_KEY_ID,
     STATUS,
     NBR_DETAILS_INSERTED,
     NBR_DETAILS_MODIFIED,
     NBR_DETAILS_DELETED,
     NBR_SMRYS_INSERTED,
     NBR_SMRYS_MODIFIED,
     NBR_SMRYS_DELETED,
     UPDATE_TYPE,
     SQL_ERROR_CODE,
     SQL_ERROR_MSG,
	 ORGANIZATION_KEY_ID)
  VALUES
    (LOAD_MSG_SEQ.NextVal,
     vic_userid,
     SYSDATE,
     vic_amp_order_nbr,
     vic_order_item_nbr,
     vic_shipment_id,
     vid_database_load_date,
     vid_amp_shipped_date,
     vid_amp_schedule_date,
     vin_part_key_id,
     vic_status,
     0,
     0,
     0,
     0,
     0,
     0,
     vic_update_code,
     TO_CHAR(vin_sqlcode),
     SUBSTR(vic_sqlerr, 1, 70),
	 vic_org_key_id);
END p_write_error;
/
